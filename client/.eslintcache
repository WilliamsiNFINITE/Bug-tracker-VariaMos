[{"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\index.tsx":"1","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\store.ts":"2","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\App.tsx":"3","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\themeSlice.ts":"4","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\usersSlice.ts":"5","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\notificationSlice.ts":"6","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\authSlice.ts":"7","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\styles\\customTheme.ts":"8","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\styles\\muiStyles.ts":"9","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\localStorage.ts":"10","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\bugsSlice.ts":"11","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\ToastNotification.tsx":"12","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\Routes.tsx":"13","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\NavBar.tsx":"14","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\helperFuncs.ts":"15","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\users.ts":"16","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\auth.ts":"17","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\notes.ts":"18","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\bugs.ts":"19","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\assignment.ts":"20","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\UserMenuMobile.tsx":"21","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\UserButtonsDesktop.tsx":"22","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Auth\\LoginPage.tsx":"23","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsPage.tsx":"24","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Auth\\SignupPage.tsx":"25","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\NotFoundPage.tsx":"26","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\backendUrl.ts":"27","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\DarkModeSwitch.tsx":"28","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\EmailForm.tsx":"29","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\FormDialog.tsx":"30","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\filterBugs.ts":"31","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\sortBugs.ts":"32","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\ErrorBox.tsx":"33","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\DemoCredsBox.tsx":"34","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\LoadingSpinner.tsx":"35","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsListMobile.tsx":"36","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsActionCard.tsx":"37","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\InfoText.tsx":"38","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsTable.tsx":"39","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\HideOnScroll.tsx":"40","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\CustomDialogTitle.tsx":"41","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\styles\\customStyles.ts":"42","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\AdminForm.tsx":"43","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\AdminsCard.tsx":"44","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsMenu.tsx":"45","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugCard.tsx":"46","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\SortBar.tsx":"47","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\FilterBar.tsx":"48","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugForm.tsx":"49","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\AdminTable.tsx":"50","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsDetailsPage.tsx":"51","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\NotesCard.tsx":"52","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\ConfirmDialog.tsx":"53","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\NoteForm.tsx":"54","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\sortNotes.ts":"55","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Auth\\InviteVerificationPage.tsx":"56","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\index.tsx":"57","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\store.ts":"58","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\App.tsx":"59","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\authSlice.ts":"60","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\themeSlice.ts":"61","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\usersSlice.ts":"62","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\bugsSlice.ts":"63","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\notificationSlice.ts":"64","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\localStorage.ts":"65","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\styles\\customTheme.ts":"66","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\styles\\muiStyles.ts":"67","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\Routes.tsx":"68","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\ToastNotification.tsx":"69","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\NavBar.tsx":"70","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\helperFuncs.ts":"71","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\auth.ts":"72","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\assignment.ts":"73","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\bugs.ts":"74","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\users.ts":"75","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\notes.ts":"76","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\UserMenuMobile.tsx":"77","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\UserButtonsDesktop.tsx":"78","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Auth\\LoginPage.tsx":"79","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Auth\\SignupPage.tsx":"80","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Auth\\InviteVerificationPage.tsx":"81","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsPage.tsx":"82","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\NotFoundPage.tsx":"83","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\backendUrl.ts":"84","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\filterBugs.ts":"85","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\sortBugs.ts":"86","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\DarkModeSwitch.tsx":"87","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\FormDialog.tsx":"88","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\EmailForm.tsx":"89","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\ErrorBox.tsx":"90","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\DemoCredsBox.tsx":"91","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\LoadingSpinner.tsx":"92","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsActionCard.tsx":"93","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\InfoText.tsx":"94","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsListMobile.tsx":"95","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsTable.tsx":"96","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\HideOnScroll.tsx":"97","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\CustomDialogTitle.tsx":"98","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\styles\\customStyles.ts":"99","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\AdminsCard.tsx":"100","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\AdminForm.tsx":"101","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugCard.tsx":"102","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsMenu.tsx":"103","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugForm.tsx":"104","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\SortBar.tsx":"105","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\FilterBar.tsx":"106","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\AdminTable.tsx":"107","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsDetailsPage.tsx":"108","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\NotesCard.tsx":"109","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\ConfirmDialog.tsx":"110","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\sortNotes.ts":"111","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\NoteForm.tsx":"112"},{"size":397,"mtime":1656662723893,"results":"113","hashOfConfig":"114"},{"size":778,"mtime":1656662723902,"results":"115","hashOfConfig":"114"},{"size":1450,"mtime":1657522500684,"results":"116","hashOfConfig":"114"},{"size":560,"mtime":1656662723901,"results":"117","hashOfConfig":"114"},{"size":3799,"mtime":1658345141959,"results":"118","hashOfConfig":"114"},{"size":1268,"mtime":1656662723901,"results":"119","hashOfConfig":"114"},{"size":5495,"mtime":1658345141955,"results":"120","hashOfConfig":"114"},{"size":561,"mtime":1656662723905,"results":"121","hashOfConfig":"114"},{"size":10020,"mtime":1656662723905,"results":"122","hashOfConfig":"114"},{"size":1017,"mtime":1657522500693,"results":"123","hashOfConfig":"114"},{"size":12021,"mtime":1658142149026,"results":"124","hashOfConfig":"114"},{"size":1065,"mtime":1656662723891,"results":"125","hashOfConfig":"114"},{"size":1862,"mtime":1658345141943,"results":"126","hashOfConfig":"114"},{"size":2047,"mtime":1658345141947,"results":"127","hashOfConfig":"114"},{"size":864,"mtime":1656662723907,"results":"128","hashOfConfig":"114"},{"size":1477,"mtime":1657522500693,"results":"129","hashOfConfig":"114"},{"size":1504,"mtime":1658345141959,"results":"130","hashOfConfig":"114"},{"size":1165,"mtime":1657522500693,"results":"131","hashOfConfig":"114"},{"size":1361,"mtime":1657522500692,"results":"132","hashOfConfig":"114"},{"size":454,"mtime":1656662723903,"results":"133","hashOfConfig":"114"},{"size":3026,"mtime":1656662723892,"results":"134","hashOfConfig":"114"},{"size":3574,"mtime":1657522500686,"results":"135","hashOfConfig":"114"},{"size":4709,"mtime":1658345141947,"results":"136","hashOfConfig":"114"},{"size":3560,"mtime":1656662723898,"results":"137","hashOfConfig":"114"},{"size":7901,"mtime":1658345141951,"results":"138","hashOfConfig":"114"},{"size":766,"mtime":1657522500689,"results":"139","hashOfConfig":"114"},{"size":75,"mtime":1657524598406,"results":"140","hashOfConfig":"114"},{"size":1424,"mtime":1656662723889,"results":"141","hashOfConfig":"114"},{"size":6055,"mtime":1657522500688,"results":"142","hashOfConfig":"114"},{"size":3604,"mtime":1656662723890,"results":"143","hashOfConfig":"114"},{"size":594,"mtime":1656662723907,"results":"144","hashOfConfig":"114"},{"size":2272,"mtime":1656662723908,"results":"145","hashOfConfig":"114"},{"size":512,"mtime":1656662723889,"results":"146","hashOfConfig":"114"},{"size":785,"mtime":1658345141943,"results":"147","hashOfConfig":"114"},{"size":437,"mtime":1656662723891,"results":"148","hashOfConfig":"114"},{"size":3683,"mtime":1658345141955,"results":"149","hashOfConfig":"114"},{"size":5860,"mtime":1656662723896,"results":"150","hashOfConfig":"114"},{"size":433,"mtime":1656662723890,"results":"151","hashOfConfig":"114"},{"size":3757,"mtime":1658142149026,"results":"152","hashOfConfig":"114"},{"size":349,"mtime":1656662723890,"results":"153","hashOfConfig":"114"},{"size":1703,"mtime":1656662723888,"results":"154","hashOfConfig":"114"},{"size":863,"mtime":1656662723904,"results":"155","hashOfConfig":"114"},{"size":10052,"mtime":1658345141951,"results":"156","hashOfConfig":"114"},{"size":2082,"mtime":1658345141955,"results":"157","hashOfConfig":"114"},{"size":6034,"mtime":1657522500688,"results":"158","hashOfConfig":"114"},{"size":849,"mtime":1658142149024,"results":"159","hashOfConfig":"114"},{"size":1240,"mtime":1656662723891,"results":"160","hashOfConfig":"114"},{"size":1633,"mtime":1656662723890,"results":"161","hashOfConfig":"114"},{"size":5202,"mtime":1658142149025,"results":"162","hashOfConfig":"114"},{"size":2814,"mtime":1658345141951,"results":"163","hashOfConfig":"114"},{"size":9365,"mtime":1658142149025,"results":"164","hashOfConfig":"114"},{"size":7025,"mtime":1657522500690,"results":"165","hashOfConfig":"114"},{"size":3966,"mtime":1656662723888,"results":"166","hashOfConfig":"114"},{"size":3803,"mtime":1657522500689,"results":"167","hashOfConfig":"114"},{"size":628,"mtime":1656662723908,"results":"168","hashOfConfig":"114"},{"size":3318,"mtime":1658345141947,"results":"169","hashOfConfig":"114"},{"size":381,"mtime":1658355307000,"results":"170","hashOfConfig":"171"},{"size":753,"mtime":1658355307000,"results":"172","hashOfConfig":"171"},{"size":1349,"mtime":1658355307000,"results":"173","hashOfConfig":"171"},{"size":5320,"mtime":1658355307000,"results":"174","hashOfConfig":"171"},{"size":534,"mtime":1658355307000,"results":"175","hashOfConfig":"171"},{"size":3665,"mtime":1658355307000,"results":"176","hashOfConfig":"171"},{"size":11544,"mtime":1658355307000,"results":"177","hashOfConfig":"171"},{"size":1218,"mtime":1658355307000,"results":"178","hashOfConfig":"171"},{"size":972,"mtime":1658355307000,"results":"179","hashOfConfig":"171"},{"size":537,"mtime":1658355307000,"results":"180","hashOfConfig":"171"},{"size":9570,"mtime":1658355307000,"results":"181","hashOfConfig":"171"},{"size":1812,"mtime":1658355307000,"results":"182","hashOfConfig":"171"},{"size":1021,"mtime":1658355307000,"results":"183","hashOfConfig":"171"},{"size":1981,"mtime":1658355307000,"results":"184","hashOfConfig":"171"},{"size":828,"mtime":1658355307000,"results":"185","hashOfConfig":"171"},{"size":1447,"mtime":1658355307000,"results":"186","hashOfConfig":"171"},{"size":437,"mtime":1658355307000,"results":"187","hashOfConfig":"171"},{"size":1296,"mtime":1658355307000,"results":"188","hashOfConfig":"171"},{"size":1426,"mtime":1658355307000,"results":"189","hashOfConfig":"171"},{"size":1114,"mtime":1658355307000,"results":"190","hashOfConfig":"171"},{"size":2917,"mtime":1658355307000,"results":"191","hashOfConfig":"171"},{"size":3453,"mtime":1658355307000,"results":"192","hashOfConfig":"171"},{"size":4562,"mtime":1658355307000,"results":"193","hashOfConfig":"171"},{"size":7655,"mtime":1658355307000,"results":"194","hashOfConfig":"171"},{"size":3779,"mtime":1658355307000,"results":"195","hashOfConfig":"171"},{"size":3411,"mtime":1658355307000,"results":"196","hashOfConfig":"171"},{"size":739,"mtime":1658355307000,"results":"197","hashOfConfig":"171"},{"size":72,"mtime":1658355307000,"results":"198","hashOfConfig":"171"},{"size":571,"mtime":1658355307000,"results":"199","hashOfConfig":"171"},{"size":2170,"mtime":1658355307000,"results":"200","hashOfConfig":"171"},{"size":1372,"mtime":1658355307000,"results":"201","hashOfConfig":"171"},{"size":3479,"mtime":1658355307000,"results":"202","hashOfConfig":"171"},{"size":5856,"mtime":1658355307000,"results":"203","hashOfConfig":"171"},{"size":492,"mtime":1658355307000,"results":"204","hashOfConfig":"171"},{"size":758,"mtime":1658417234570,"results":"205","hashOfConfig":"171"},{"size":418,"mtime":1658355307000,"results":"206","hashOfConfig":"171"},{"size":5668,"mtime":1658355307000,"results":"207","hashOfConfig":"171"},{"size":416,"mtime":1658355307000,"results":"208","hashOfConfig":"171"},{"size":3576,"mtime":1658355307000,"results":"209","hashOfConfig":"171"},{"size":3628,"mtime":1658355307000,"results":"210","hashOfConfig":"171"},{"size":334,"mtime":1658355307000,"results":"211","hashOfConfig":"171"},{"size":1639,"mtime":1658355307000,"results":"212","hashOfConfig":"171"},{"size":825,"mtime":1658355307000,"results":"213","hashOfConfig":"171"},{"size":2009,"mtime":1658355307000,"results":"214","hashOfConfig":"171"},{"size":9732,"mtime":1658355307000,"results":"215","hashOfConfig":"171"},{"size":813,"mtime":1658355307000,"results":"216","hashOfConfig":"171"},{"size":5840,"mtime":1658355307000,"results":"217","hashOfConfig":"171"},{"size":5013,"mtime":1658355307000,"results":"218","hashOfConfig":"171"},{"size":1194,"mtime":1658355307000,"results":"219","hashOfConfig":"171"},{"size":1580,"mtime":1658355307000,"results":"220","hashOfConfig":"171"},{"size":2727,"mtime":1658355307000,"results":"221","hashOfConfig":"171"},{"size":9044,"mtime":1658355307000,"results":"222","hashOfConfig":"171"},{"size":6830,"mtime":1658355307000,"results":"223","hashOfConfig":"171"},{"size":3824,"mtime":1658355307000,"results":"224","hashOfConfig":"171"},{"size":605,"mtime":1658355307000,"results":"225","hashOfConfig":"171"},{"size":3663,"mtime":1658355307000,"results":"226","hashOfConfig":"171"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},"1ml58un",{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"229"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"229"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"229"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"229"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"229"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"229"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"229"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"229"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"229"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"229"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"229"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"229"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"229"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"229"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"229"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"229"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"229"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"229"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"229"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"229"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t0alzc",{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\index.tsx",[],["474","475"],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\store.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\App.tsx",["476"],"import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { autoLogin } from './redux/slices/authSlice';\r\nimport { selectThemeState, toggleDarkMode } from './redux/slices/themeSlice';\r\nimport NavBar from './components/NavBar';\r\nimport Routes from './Routes';\r\nimport ToastNotification from './components/ToastNotification';\r\nimport storage from './utils/localStorage';\r\n\r\nimport customTheme from './styles/customTheme';\r\nimport { useBodyStyles } from './styles/muiStyles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { selectUsersState } from './redux/slices/usersSlice';/*\r\nimport { User } from '../../server/src/entity/User';*/\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const { darkMode } = useSelector(selectThemeState);\r\n  const classes = useBodyStyles(darkMode)();\r\n\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadedDarkMode = storage.loadDarkMode();\r\n    if (loadedDarkMode && !darkMode) {\r\n      dispatch(toggleDarkMode());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={customTheme(darkMode)}>\r\n      <div className={classes.root}>\r\n        <NavBar />\r\n        <Routes />\r\n        <ToastNotification />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\themeSlice.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\usersSlice.ts",["477","478"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport userService from '../../services/users';\r\nimport { SettingsPayload, InviteAdminPayload, User } from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport { string } from 'yup';\r\nimport { useState } from 'react';\r\n\r\ninterface InitialBugState {\r\n  users: User[];\r\n  status: 'idle' | 'loading' | 'succeeded';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  users: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    setUsersLoading: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    addAdmin: (state, action: PayloadAction<{ admins: string }>) => {\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    removeAdministrator: (state, action: PayloadAction<{ adminId: string }>) => {\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    ChangeSettings: (state, action: PayloadAction<{ data: SettingsPayload; userId: string }>) => {\r\n      state.users = state.users.map((u) => u.id === action.payload.userId ? {...u, ...action.payload.data } : u\r\n      );\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUsers, setUsersLoading, addAdmin, removeAdministrator, ChangeSettings } = usersSlice.actions;\r\n\r\nexport const fetchUsers = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setUsersLoading());\r\n      const allUsers = await userService.getUsers();\r\n      dispatch(setUsers(allUsers));\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addAdmins = (\r\n  admins: string[],\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newAdmins = await userService.addAdmins(admins);\r\n      dispatch(addAdmin({ admins: newAdmins }));\r\n      dispatch(notify('New admin(s) added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const inviteAdmin = (\r\n  data: InviteAdminPayload,\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.inviteAdmin(data);\r\n      dispatch(notify('Email was sent successfully!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n    dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeAdmin = (\r\n  adminId: string\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.removeAdmin(adminId);\r\n      dispatch(removeAdministrator({ adminId }));\r\n      dispatch(notify('Removed the administrator.', 'success'));\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeSettings = (\r\n  data: SettingsPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedUser: User = await userService.changeSettings(data);\r\n      const userId = updatedUser.id;\r\n      dispatch(ChangeSettings( { data, userId }));\r\n      dispatch(notify('New settings saved!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectUsersState = (state: RootState) => {\r\n  return state.users;\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\notificationSlice.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\styles\\customTheme.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\styles\\muiStyles.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\localStorage.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\redux\\slices\\bugsSlice.ts",["479","480"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport bugService from '../../services/bugs';\r\nimport assignmentService from '../../services/assignment';\r\nimport noteService from '../../services/notes';\r\nimport {\r\n  BugState,\r\n  BugSortValues,\r\n  BugPayload,\r\n  EditedBugData,\r\n  ClosedReopenedBugData,\r\n  Note,\r\n  BugFilterValues,\r\n  AssignedAdmins,\r\n  User,\r\n} from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { History } from 'history';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport userService from '../../services/users';\r\nimport usersSlice from './usersSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface InitialBugState {\r\n  bugs: BugState[];\r\n  fetchLoading: boolean;\r\n  fetchError: string | null;\r\n  submitLoading: boolean;\r\n  submitError: string | null;\r\n  sortBy: BugSortValues;\r\n  filterBy: BugFilterValues;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  bugs: [],\r\n  fetchLoading: false,\r\n  fetchError: null,\r\n  submitLoading: false,\r\n  submitError: null,\r\n  sortBy: 'newest',\r\n  filterBy: 'all',\r\n};\r\n\r\nconst bugsSlice = createSlice({\r\n  name: 'bugs',\r\n  initialState,\r\n  reducers: {\r\n    setBugs: (\r\n      state,\r\n      action: PayloadAction<BugState[]>\r\n    ) => {\r\n      state.bugs = action.payload;\r\n      state.fetchLoading = false;\r\n      state.fetchError = null;\r\n    },\r\n    addBug: (\r\n      state,\r\n      action: PayloadAction<BugState>\r\n    ) => {\r\n      state.bugs.push(action.payload);\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    updateBug: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: EditedBugData;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) => b.id === action.payload.bugId ? {...b, ...action.payload.data } : b\r\n      );\r\n\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    removeBug: (\r\n      state,\r\n      action: PayloadAction<string>\r\n    ) => {\r\n      state.bugs = state.bugs.filter((b) => b.id !== action.payload);\r\n    },\r\n    updateBugStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: ClosedReopenedBugData;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) => b.id === action.payload.bugId ? {...b, ...action.payload.data } : b\r\n      );\r\n    },\r\n    assignBug: (\r\n        state,\r\n        action: PayloadAction<{ assignments: AssignedAdmins[]; bugId: string }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) =>\r\n        b.id === action.payload.bugId\r\n          ? { ...b, assignments: action.payload.assignments }\r\n          : b\r\n      );\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    addNote: (\r\n      state,\r\n      action: PayloadAction<{ note: Note; bugId: string }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) =>\r\n        b.id === action.payload.bugId\r\n          ? { ...b, notes: [...b.notes, action.payload.note] }\r\n          : b\r\n      );\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    updateNote: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: { body: string; updatedAt: Date };\r\n        noteId: number;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      const bug = state.bugs.find(\r\n        (b) => b.id === action.payload.bugId\r\n      );\r\n\r\n      if (bug) {\r\n        const updatedNotes = bug.notes.map((n) =>\r\n          n.id === action.payload.noteId ? { ...n, ...action.payload.data } : n\r\n        );\r\n\r\n        state.bugs = state.bugs.map((b) =>\r\n          b.id === action.payload.bugId ? { ...b, notes: updatedNotes } : b\r\n        );\r\n\r\n        state.submitLoading = false;\r\n        state.submitError = null;\r\n      }\r\n    },\r\n    removeNote: (\r\n      state,\r\n      action: PayloadAction<{\r\n        noteId: number;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      const bug = state.bugs.find(\r\n        (b) => b.id === action.payload.bugId\r\n      );\r\n\r\n      if (bug) {\r\n        const updatedNotes = bug.notes.filter(\r\n          (n) => n.id !== action.payload.noteId\r\n        );\r\n\r\n        state.bugs = state.bugs.map((b) =>\r\n          b.id === action.payload.bugId ? { ...b, notes: updatedNotes } : b\r\n        );\r\n      }\r\n    },\r\n    setFetchBugsLoading: (state) => {\r\n      state.fetchLoading = true;\r\n      state.fetchError = null;\r\n    },\r\n    setFetchBugsError: (state, action: PayloadAction<string>) => {\r\n      state.fetchLoading = false;\r\n      state.fetchError = action.payload;\r\n    },\r\n\r\n    setSubmitBugLoading: (state) => {\r\n      state.submitLoading = true;\r\n      state.submitError = null;\r\n    },\r\n    setSubmitBugError: (state, action: PayloadAction<string>) => {\r\n      state.submitLoading = false;\r\n      state.submitError = action.payload;\r\n    },\r\n    clearSubmitBugError: (state) => {\r\n      state.submitError = null;\r\n    },\r\n    sortBugsBy: (state, action: PayloadAction<BugSortValues>) => {\r\n      state.sortBy = action.payload;\r\n    },\r\n    filterBugsBy: (state, action: PayloadAction<BugFilterValues>) => {\r\n      state.filterBy = action.payload;\r\n    },\r\n  }\r\n}\r\n)\r\n\r\nexport const {\r\n  setBugs,\r\n  addBug,\r\n  updateBug,\r\n  removeBug,\r\n  updateBugStatus,\r\n  addNote,\r\n  updateNote,\r\n  removeNote,\r\n  setFetchBugsLoading,\r\n  setFetchBugsError,\r\n  setSubmitBugLoading,\r\n  setSubmitBugError,\r\n  clearSubmitBugError,\r\n  sortBugsBy,\r\n  filterBugsBy,\r\n  assignBug,\r\n} = bugsSlice.actions;\r\n\r\nexport const fetchBugs = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      \r\n      dispatch(setFetchBugsLoading());\r\n      \r\n      const allBugs = await bugService.getBugs();\r\n     \r\n      dispatch(setBugs(allBugs));\r\n    } catch (e: any) {\r\n      alert(e)\r\n      dispatch(setFetchBugsError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewBug = (\r\n  bugData: BugPayload,\r\n  closeDialog?: () => void,\r\n  file?: File\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"file: \", file);\r\n      dispatch(setSubmitBugLoading());\r\n      if (file) {\r\n        const newBug = await bugService.createBug(bugData, file);\r\n        dispatch(addBug(newBug));\r\n      }\r\n      else {\r\n        const newBug = await bugService.createBug(bugData);\r\n        dispatch(addBug(newBug));\r\n      }\r\n      dispatch(notify('New bug added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editBug = (\r\n  bugId: string,\r\n  bugData: BugPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const updatedBug = await bugService.updateBug(bugId, bugData);\r\n      const {\r\n        title,\r\n        description,\r\n        priority,\r\n        updatedAt,\r\n        updatedBy,\r\n      } = updatedBug as EditedBugData;\r\n\r\n      dispatch(\r\n        updateBug({\r\n          data: { title, description, priority, updatedAt, updatedBy },\r\n          bugId,\r\n        })\r\n      );\r\n      dispatch(notify('Successfully updated the bug!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBug = (\r\n  bugId: string,\r\n  history: History\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await bugService.deleteBug(bugId);\r\n      history.push(`/`);\r\n      dispatch(removeBug(bugId));\r\n      dispatch(notify('Deleted the bug.', 'success'));\r\n      window.location.reload();\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeReopenBug = (\r\n  bugId: string,\r\n  action: 'close' | 'reopen'\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let returnedData;\r\n      if (action === 'close') {\r\n        returnedData = await bugService.closeBug(bugId);\r\n      } else {\r\n        returnedData = await bugService.reopenBug(bugId);\r\n      }\r\n      const {\r\n        isResolved,\r\n        closedAt,\r\n        closedBy,\r\n        reopenedAt,\r\n        reopenedBy,\r\n      } = returnedData as ClosedReopenedBugData;\r\n      dispatch(\r\n        updateBugStatus({\r\n          data: { isResolved, closedAt, closedBy, reopenedAt, reopenedBy },\r\n          bugId,\r\n        })\r\n      );\r\n      dispatch(\r\n        notify(\r\n          `${action === 'close' ? 'Closed' : 'Re-opened'} the bug!`,\r\n          'success'\r\n        )\r\n      );\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const assignBugTo = (\r\n  bugId: string,\r\n  admins: string[],\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // return an array with the assignments and the number of new admins assigned\r\n      const AssignmentArray = await assignmentService.assignBug(bugId, admins);\r\n      const Assignments = AssignmentArray[0];\r\n      // array of admins assigned to this bug\r\n      const Admins: User[] = Assignments.map((a: any) => a.admin);\r\n      const nb_admins = AssignmentArray[1];\r\n      dispatch(assignBug({ assignments: Assignments, bugId }));\r\n      // we only want to send a notification to the new assigned admins\r\n      const adminsToSendNotif = Admins.slice(Admins.length - nb_admins);\r\n      const adminsIdsToSendNotif = adminsToSendNotif.map((a: any) => a.id);\r\n      for (let id of adminsIdsToSendNotif) {\r\n        console.log(\"au tour de \", id);\r\n        console.log(typeof(id))\r\n        await userService.sendNotification(id);\r\n      }\r\n      dispatch(notify('Bug assigned!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNote = (\r\n  bugId: string,\r\n  noteBody: string,\r\n  isReply: boolean,\r\n  noteId?: number,\r\n  closeDialog?: () => void,\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      if (noteId) {\r\n        const newNote = await noteService.createNote(bugId, noteBody, isReply, noteId);\r\n        dispatch(addNote({ note: newNote, bugId }));\r\n      }\r\n      else {\r\n        const newNote = await noteService.createNote(bugId, noteBody, isReply);\r\n        dispatch(addNote({ note: newNote, bugId }));\r\n      }\r\n      dispatch(notify('New note added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editNote = (\r\n  bugId: string,\r\n  noteId: number,\r\n  noteBody: string,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const returnedData = await noteService.editNote(\r\n        bugId,\r\n        noteId,\r\n        noteBody\r\n      );\r\n      const { body, updatedAt } = returnedData as Note;\r\n      dispatch(\r\n        updateNote({ data: { body, updatedAt }, noteId, bugId })\r\n      );\r\n      dispatch(notify('Updated the note!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteNote = (\r\n  bugId: string,\r\n  noteId: number\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await noteService.deleteNote(bugId, noteId);\r\n      dispatch(removeNote({ noteId, bugId }));\r\n      dispatch(notify('Deleted the note.', 'success'));\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectBugsState = (state: RootState) => state.bugs;\r\n\r\nexport const selectBugsById = (state: RootState, bugId: string) => {\r\n  return state.bugs.bugs.find((b) => b.id === bugId);\r\n};\r\n\r\nexport const selectBugsByProjectId = (state: RootState) => {\r\n  return state.bugs.bugs;\r\n};\r\n\r\nexport const selectAllAdmins = (state: RootState) => {\r\n  return state.users.users.filter((u) => u.isAdmin === true);\r\n};\r\n\r\nexport default bugsSlice.reducer;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\ToastNotification.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\Routes.tsx",["481","482","483","484","485"],"import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport LoginPage from './pages/Auth/LoginPage';\r\nimport SignupPage from './pages/Auth/SignupPage';\r\nimport BugsPage from './pages/Main/BugsPage';\r\nimport BugDetailsPage from './pages/Main/BugsDetailsPage';\r\nimport NotFoundPage from './pages/Main/NotFoundPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAuthState } from './redux/slices/authSlice';\r\nimport storage from './utils/localStorage';\r\nimport { Container, useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { selectBugsState } from './redux/slices/bugsSlice';\r\nimport { UserState } from './redux/types';\r\nimport { updateShorthandPropertyAssignment } from 'typescript';\r\nimport InviteVerificationPage from './pages/Auth/InviteVerificationPage';\r\n\r\nconst Routes = () => {\r\n  const { user } = useSelector(selectAuthState);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const isLoggedIn = storage.loadUser() || user;\r\n\r\n  return (\r\n    <Container disableGutters={isMobile}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {<BugsPage isMobile={false} />}\r\n        </Route>\r\n        <Route exact path=\"/bugs\">\r\n          {<BugsPage isMobile={false} />}\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          {user?.username === \"user\" ? <LoginPage /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route exact path={'/invite/SUJ3NW12UVhIaVNiOTVuNzJrN2g='}>\r\n          <InviteVerificationPage />\r\n        </Route>\r\n        <Route exact path=\"/signup\">\r\n          {user?.username === \"user\" ? <SignupPage adminMode={false}/> : <Redirect to=\"/\" />}\r\n        </Route>\r\n\r\n        <Route>\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\NavBar.tsx",["486","487","488","489","490","491","492","493","494","495","496"],"import { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthState, logout, login } from '../redux/slices/authSlice';\r\nimport UserButtonsDesktop from './UserButtonsDesktop';\r\nimport UserMenuMobile from './UserMenuMobile';\r\nimport BugIcon from '../svg/bug-logo.svg';\r\nimport { CredentialsPayload } from '../redux/types';\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Link,\r\n  Button,\r\n  useMediaQuery,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useNavStyles } from '../styles/muiStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst NavBar = () => {\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const classes = useNavStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const mainButton = () => {\r\n      return (\r\n          <a href=\"https://variamos.com/home/\">\r\n              <img src=\"VariaMosLogo.5980c241.png\" alt=\"logo\" width=\"191\" height=\"39\" className=\"img-fluid\" />\r\n          </a>\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Container disableGutters={isMobile} className={classes.container}>\r\n      <AppBar elevation={1} color=\"inherit\" position=\"static\">\r\n        <Toolbar variant=\"dense\" disableGutters={isMobile}>\r\n          <div className={classes.leftPortion}>{mainButton()}</div>\r\n          <UserButtonsDesktop\r\n            isMobile={isMobile}\r\n            user={user}\r\n            handleLogout={handleLogout}\r\n          />\r\n          <UserMenuMobile\r\n            isMobile={isMobile}\r\n            user={user}\r\n            handleLogout={handleLogout}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\helperFuncs.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\users.ts",["497"],"import { RepeatOneSharp } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\nimport { SettingsPayload, InviteAdminPayload } from '../redux/types';\r\nimport { setConfig } from './auth';\r\n\r\nconst baseUrl = `${backendUrl}/users`;\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst addAdmins = async (admins: string[]) => {\r\n  const response = await axios.post(`${baseUrl}/admins`, { admins }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst inviteAdmin = async(data: InviteAdminPayload) => {\r\n  const response = await axios.post(`${baseUrl}/inviteAdmin`, { data }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst removeAdmin = async (adminId: string) => {\r\n  const response = await axios.delete(\r\n    `${baseUrl}/admin/${adminId}`, setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst changeSettings = async (data: SettingsPayload) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/email`, data, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst sendNotification = async (adminsIds: string) => {\r\n  console.log(\" id avant la route: \", adminsIds)\r\n  const response = await axios.post(\r\n    `${baseUrl}/sendNotification`, { adminsIds }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\n\r\nconst userService = { getUsers, addAdmins, inviteAdmin, removeAdmin, changeSettings, sendNotification };\r\n\r\nexport default userService;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\auth.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\notes.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\bugs.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\services\\assignment.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\UserMenuMobile.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\UserButtonsDesktop.tsx",["498","499","500","501"],"import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { SettingsPayload, UserState } from '../redux/types';\r\nimport DarkModeSwitch from './DarkModeSwitch';\r\n\r\nimport { Button, Avatar, Typography } from '@material-ui/core';\r\nimport { useNavStyles } from '../styles/muiStyles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FormDialog from './FormDialog';\r\nimport BugForm from '../pages/Main/BugForm';\r\nimport EmailForm from '../pages/Main/EmailForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUsersState } from '../redux/slices/usersSlice';\r\n\r\ninterface UserMenu {\r\n  isMobile: boolean;\r\n  user: UserState | null;\r\n  handleLogout: () => void;\r\n}\r\n\r\nconst UserButtonsDesktop: React.FC<UserMenu> = ({\r\n  isMobile,\r\n  user,\r\n  handleLogout,\r\n}) => {\r\n  const classes = useNavStyles();\r\n  const email = user?.email;\r\n\r\n  let emailExist: boolean = false;\r\n  if (email) {\r\n      emailExist = true;\r\n  }\r\n\r\n  if (isMobile) return null;\r\n\r\n  return (\r\n    <div>\r\n      {user?.username !== \"user\" ? (\r\n        <div className={classes.btnsWrapper}>\r\n          <div className={classes.userInfo}>\r\n            <Avatar className={classes.avatar}>\r\n              {user?.username.slice(0, 1)}\r\n            </Avatar>\r\n            <Typography color=\"secondary\" variant=\"body1\">\r\n              {user?.username}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.lastBtn}\r\n              onClick={handleLogout}\r\n              startIcon={<PowerSettingsNewIcon />}\r\n            >\r\n              Log Out\r\n            </Button>\r\n            \r\n          \r\n            <FormDialog\r\n            triggerBtn={\r\n              isMobile\r\n                ? {\r\n                    color: \"secondary\",\r\n                    type: 'fab',\r\n                    variant: 'extended',\r\n                    text: 'Email',\r\n                    icon: SettingsIcon,\r\n                  }\r\n                : {\r\n                    color: \"secondary\",\r\n                    type: 'normal',\r\n                    variant: 'outlined',\r\n                    text: 'Settings',\r\n                    icon: SettingsIcon,\r\n                    size: 'small',\r\n                    style: { marginLeft: '10px' },\r\n                  }\r\n            }\r\n            title=\"Change your personnal settings\"\r\n          >\r\n            <EmailForm emailExist={emailExist} />\r\n          </FormDialog>\r\n        </div>\r\n          <DarkModeSwitch isMobile={isMobile} />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            component={RouterLink}\r\n            to=\"/login\"\r\n            startIcon={<ExitToAppIcon />}\r\n          >\r\n            Log In\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.lastBtn}\r\n            component={RouterLink}\r\n            to=\"/signup\"\r\n            startIcon={<PersonAddIcon />}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <DarkModeSwitch isMobile={isMobile} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserButtonsDesktop;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsPage.tsx",["502","503","504","505","506"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsByProjectId,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from './BugsTable';\r\nimport BugsActionCard from './BugsActionCard';\r\nimport BugsListMobile from './BugsListMobile';\r\nimport sortBugs from '../../utils/sortBugs';\r\nimport filterBugs from '../../utils/filterBugs';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\nimport InfoText from '../../components/InfoText';\r\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport BugReportOutlinedIcon from '@material-ui/icons/BugReportOutlined';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { BugState } from '../../redux/types';\r\n\r\n\r\nconst BugsPage: React.FC<{ isMobile: boolean }> = ({\r\n  isMobile,\r\n  }) => {\r\n    const classes = useMainPageStyles();\r\n    const dispatch = useDispatch();\r\n    const bugs = useSelector((state: RootState) =>\r\n    selectBugsByProjectId(state)\r\n  );\r\n  const { fetchLoading, fetchError, sortBy, filterBy } = useSelector(\r\n    selectBugsState\r\n  );\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const { user, loading, error } = useSelector(selectAuthState);\r\n  const userId = user?.id;\r\n\r\n  useEffect(() => {\r\n    if (!bugs) {\r\n      dispatch(fetchBugs());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const filteredSortedBugs =\r\n    bugs &&\r\n    sortBugs(\r\n      bugs.filter(\r\n        (b) =>\r\n          b.title.toLowerCase().includes(filterValue.toLowerCase()) &&\r\n          filterBugs(filterBy, b, userId)\r\n      ),\r\n      sortBy\r\n    );\r\n\r\n  const bugsDataToDisplay = () => {\r\n    if (fetchLoading) {\r\n      \r\n      return (\r\n        <LoadingSpinner\r\n          marginTop={isMobile ? '3em' : '4em'}\r\n          size={isMobile ? 60 : 80}\r\n        />\r\n      );\r\n    } else if (fetchError) {\r\n      \r\n      return (\r\n        <InfoText\r\n          text={`Error: ${fetchError}`}\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n        />\r\n      );\r\n    } else if (!bugs || bugs.length === 0) {\r\n      return (\r\n        <InfoText text=\"No Bugs added yet.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else if (!filteredSortedBugs || filteredSortedBugs.length === 0) {\r\n      return (\r\n        <InfoText text=\"No matches found.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {isMobile ? (\r\n            <BugsListMobile bugs={filteredSortedBugs} user={user}/>\r\n          ) : (\r\n            <BugsTable bugs={filteredSortedBugs} user={user}/>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.bugsPaper}>\r\n      <Typography\r\n        variant={isMobile ? 'h6' : 'h5'}\r\n        color=\"secondary\"\r\n        className={classes.flexHeader}\r\n      >\r\n        <BugReportOutlinedIcon\r\n          fontSize={isMobile ? 'default' : 'large'}\r\n          style={{ marginRight: '0.2em' }}\r\n        />\r\n        Bugs\r\n      </Typography>\r\n      <div className={classes.bugsActionCard}>\r\n        <BugsActionCard\r\n          filterValue={filterValue}\r\n          setFilterValue={setFilterValue}\r\n          isMobile={isMobile}\r\n        />\r\n      </div>\r\n      {bugsDataToDisplay()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BugsPage;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Auth\\SignupPage.tsx",["507","508","509","510","511","512"],"import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  signup,\r\n  clearAuthError,\r\n  setAuthError,\r\n  selectAuthState,\r\n} from '../../redux/slices/authSlice';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport BugIcon from '../../svg/bug-logo.svg';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Link,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport { useAuthPageStyles } from '../../styles/muiStyles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AlternateEmail from '@material-ui/icons/AlternateEmail';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EnhancedEncryptionIcon from '@material-ui/icons/EnhancedEncryption';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport DemoCredsBox from '../../components/DemoCredsBox';\r\n\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  email?: string;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    .max(20, 'Must be at most 20 characters')\r\n    .min(3, 'Must be at least 3 characters')\r\n    .matches(\r\n      /^[a-zA-Z0-9-_]*$/,\r\n      'Only alphanum, dash & underscore characters are allowed'\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Must be at least 6 characters'),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Must be at least 6 characters'),\r\n});\r\n\r\nconst SignupPage: React.FC<{\r\n  adminMode: boolean;\r\n  }> = ({ adminMode })  => {\r\n  const classes = useAuthPageStyles();\r\n  const dispatch = useDispatch();\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const { loading, error } = useSelector(selectAuthState);\r\n  const [showPass, setShowPass] = useState<boolean>(false);\r\n  const [showConfPass, setShowConfPass] = useState<boolean>(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n\r\n  const handleSignup = ({\r\n    username,\r\n    password,\r\n    confirmPassword,\r\n    email,\r\n  }: InputValues) => {\r\n    if (password !== confirmPassword) {\r\n      return dispatch(setAuthError('Both passwords need to match.'));\r\n    }\r\n    dispatch(signup({ username, password, email }, adminMode ));\r\n    setIsConnected(true);\r\n  };\r\n\r\n\r\n  return (\r\n    <div> \r\n      <Paper className={classes.root} elevation={2}>\r\n        <img src={BugIcon} alt=\"bug-logo\" className={classes.titleLogo} />\r\n        <form onSubmit={handleSubmit(handleSignup)} className={classes.form}>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              error={'username' in errors}\r\n              helperText={'username' in errors ? errors.username.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"password\"\r\n              type={showPass ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              error={'password' in errors}\r\n              helperText={'password' in errors ? errors.password.message : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"confirmPassword\"\r\n              type={showConfPass ? 'text' : 'password'}\r\n              label=\"Confirm Password\"\r\n              variant=\"outlined\"\r\n              error={'confirmPassword' in errors}\r\n              helperText={\r\n                'confirmPassword' in errors\r\n                  ? errors.confirmPassword.message\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowConfPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showConfPass ? (\r\n                        <VisibilityOffIcon />\r\n                      ) : (\r\n                        <VisibilityIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <EnhancedEncryptionIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"email\"\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              error={'email' in errors}\r\n              helperText={'email' in errors ? errors.email.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AlternateEmail color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            startIcon={<PersonAddIcon />}\r\n            type=\"submit\"\r\n            className={classes.submitButton}\r\n            disabled={loading}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        {!adminMode ? (\r\n        <Typography variant=\"body1\" className={classes.footerText}>\r\n          Already have an account?{' '}\r\n          <Link\r\n            className={classes.link}\r\n            component={RouterLink}\r\n            to=\"/login\"\r\n            color=\"secondary\"\r\n          >\r\n            Log In\r\n          </Link>\r\n        </Typography>\r\n        ) : '' }\r\n        {error && (\r\n          <ErrorBox\r\n            errorMsg={error}\r\n            clearErrorMsg={() => dispatch(clearAuthError())}\r\n          />\r\n        )}\r\n      </Paper>\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\backendUrl.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\DarkModeSwitch.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\EmailForm.tsx",["513","514","515"],"import { useForm, Controller } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  clearSubmitBugError,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { BugPayload, SettingsPayload } from '../../redux/types';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport {\r\n  TextField,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormLabel,\r\n  FormControl,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { changeSettings } from '../../redux/slices/usersSlice';\r\nimport { useState } from 'react';\r\n\r\ninterface EmailFormProps {\r\n  closeDialog?: () => void;\r\n  emailExist: boolean;\r\n  currentData?: SettingsPayload;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string(),\r\n  });\r\n\r\nconst EmailForm: React.FC<EmailFormProps> = ({\r\n  closeDialog,\r\n  emailExist,\r\n  currentData,\r\n}) => {\r\n\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n  const userId = user?.id;\r\n  const { submitError, submitLoading } = useSelector(selectBugsState);\r\n  const [showPass, setShowPass] = useState<boolean>(false);\r\n  const [showConfPass, setShowConfPass] = useState<boolean>(false);\r\n  const { register, control, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      email: user?.email || '',\r\n      notificationsOn: user?.notificationsOn || true,\r\n      newPassword: '',\r\n      oldPassword: '',\r\n    },\r\n  });\r\n\r\n  const handleChangeSettings = (data: SettingsPayload) => {\r\n    dispatch(changeSettings(data, closeDialog));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(handleChangeSettings)}\r\n    >\r\n      <br></br>\r\n      <TextField\r\n        inputRef={register}\r\n        name=\"email\"\r\n        fullWidth\r\n        type=\"text\"\r\n        label=\"New Email adress\"\r\n        variant=\"outlined\"\r\n        error={'email' in errors}\r\n        helperText={'email' in errors ? errors.email?.message : ''}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <TitleIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        className={classes.fieldMargin}\r\n        inputRef={register}\r\n        name=\"newPassword\"\r\n        fullWidth\r\n        type={showPass ? 'text' : 'password'}\r\n        label=\"New Password\"\r\n        variant=\"outlined\"\r\n        error={'newPassword' in errors}\r\n        helperText={'newPassword' in errors ? errors.newPassword?.message : ''}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n          ),\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        className={classes.fieldMargin}\r\n        inputRef={register}\r\n        name=\"oldPassword\"\r\n        fullWidth\r\n        type={showConfPass ? 'text' : 'password'}\r\n        label=\"Old Password\"\r\n        variant=\"outlined\"\r\n        error={'oldPassword' in errors}\r\n        helperText={'oldPassword' in errors ? errors.oldPassword?.message : ''}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowConfPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showConfPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n          ),\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name=\"notifications\"\r\n        as={\r\n          <FormControl className={classes.radioGroupForm}>\r\n            <RadioGroup row className={classes.radioGroup}>\r\n              <FormLabel className={classes.radioGroupLabel}>\r\n                Notifications (On/Off):\r\n              </FormLabel>\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel\r\n                  value=\"on\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"On\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"off\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Off\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        }\r\n      />\r\n      \r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        fullWidth\r\n        className={classes.submitBtn}\r\n        type=\"submit\"\r\n        disabled={submitLoading}\r\n      >\r\n        Change Settings\r\n      </Button>\r\n      {submitError && (\r\n        <ErrorBox\r\n          errorMsg={submitError}\r\n          clearErrorMsg={() => dispatch(clearSubmitBugError())}\r\n        />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\FormDialog.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\filterBugs.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\sortBugs.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\ErrorBox.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\DemoCredsBox.tsx",["516"],"import { Alert, AlertTitle } from '@material-ui/lab';\r\nimport demoCreds from '../data/demoCreds';\r\n\r\nconst DemoCredsBox: React.FC<{\r\n  adminSignup: boolean;\r\n  }> = ({ adminSignup })  => {\r\n  if (adminSignup === true) {\r\n    return (\r\n      <div style={{ width: '100%', marginTop: '0.8em', marginBottom: '0.8em' }}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle>VariaMos Bug Tracker</AlertTitle>\r\n        Please enter your invitation code.\r\n      </Alert>\r\n    </div>\r\n    )\r\n  }\r\n  else {\r\n  return (\r\n    <div style={{ width: '100%', marginTop: '0.8em', marginBottom: '0.8em' }}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle>VariaMos Bug Tracker</AlertTitle>\r\n        Thank you for your help !\r\n      </Alert>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n\r\nexport default DemoCredsBox;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsListMobile.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsActionCard.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\InfoText.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsTable.tsx",["517","518","519"],"import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { BugState, UserState } from '../../redux/types';\r\nimport BugsMenu from './BugsMenu';\r\nimport { formatDateTime } from '../../utils/helperFuncs';\r\nimport { priorityStyles, statusStyles } from '../../styles/customStyles';\r\n\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Link,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\nimport BugCard from './BugCard';\r\n\r\nconst tableHeaders = [\r\n  'Title',\r\n  'Priority',\r\n  'Status',\r\n  'Added',\r\n  'Updated',\r\n  'Notes',\r\n  'Actions',\r\n];\r\n\r\nconst BugsTable: React.FC<{ bugs: BugState[], user: UserState | null }> = ({ bugs, user }) => {\r\n  const classes = useTableStyles();\r\n  const history = useHistory();\r\n  const [viewBug, setViewBug] = useState(false);\r\n  const [bugId, setBugId] = useState('');\r\n\r\n  const actionsOnClick = (bugId: string) => {\r\n    //history.push(`/bugs/${bugId}`);\r\n    setViewBug(!viewBug);\r\n    setBugId(bugId);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.table}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {tableHeaders.map((t) => (\r\n              <TableCell key={t} align=\"center\">\r\n                {t}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {bugs.map((b) => (\r\n            <TableRow key={b.id}>\r\n              <TableCell\r\n                align=\"center\"\r\n                onClick={() =>\r\n                  actionsOnClick(b.id)\r\n                }\r\n                className={classes.clickableCell}\r\n              >\r\n                {/*<Link\r\n                  component={RouterLink}\r\n                  to={`/bugs/${b.id}`}\r\n                  color=\"secondary\"\r\n              >\r\n                  {b.title}\r\n              </Link>*/}\r\n              {b.title}\r\n              </TableCell>\r\n              \r\n              <TableCell align=\"center\">\r\n                <div\r\n                  style={{\r\n                    ...priorityStyles(b.priority),\r\n                    textTransform: 'capitalize',\r\n                    margin: '0 auto',\r\n                  }}\r\n                >\r\n                  {b.priority}\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <div\r\n                  style={{\r\n                    ...statusStyles(b.isResolved),\r\n                    margin: '0 auto',\r\n                  }}\r\n                >\r\n                  {b.isResolved ? 'Closed' : 'Open'}\r\n                </div>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {formatDateTime(b.createdAt)} ~ {b.createdBy.username}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {!b.updatedAt || !b.updatedBy\r\n                  ? 'n/a'\r\n                  : `${formatDateTime(b.updatedAt)} ~ ${b.updatedBy.username}`}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{b.notes.length}</TableCell>\r\n              <TableCell align=\"center\">\r\n                <BugsMenu\r\n                  bugId={b.id}\r\n                  currentData={{\r\n                    title: b.title,\r\n                    description: b.description,\r\n                    priority: b.priority,\r\n                  }}\r\n                  isResolved={b.isResolved}\r\n                  isAdmin={user?.isAdmin}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <BugCard\r\n        viewBug={ viewBug }\r\n        bugId={ bugId }\r\n       />              \r\n    </Paper>\r\n\r\n  );\r\n};\r\n\r\nexport default BugsTable;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\HideOnScroll.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\CustomDialogTitle.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\styles\\customStyles.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\AdminForm.tsx",["520"],"import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { inviteAdmin, selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { InviteAdminPayload, User } from '../../redux/types';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport { addAdmins } from '../../redux/slices/usersSlice';\r\nimport { assignBugTo } from '../../redux/slices/bugsSlice';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\n\r\ninterface BaseType {\r\n    closeDialog?: () => void;\r\n  }\r\n\r\n  \r\nconst validationSchema = yup.object({\r\n    email: yup.string()\r\n    });\r\n\r\ninterface MakeAdmin extends BaseType {\r\n    editMode: 'admin' | 'assign';\r\n    currentAdmins: string[];\r\n    bugId?: string;\r\n  }\r\n\r\nconst AdminForm: React.FC<MakeAdmin> = ({\r\n    closeDialog,\r\n    editMode,\r\n    currentAdmins,\r\n    bugId,\r\n}) => {\r\n  \r\n    const [select, setSelect]= useState('');\r\n    const classes = useFormStyles();\r\n    const dispatch = useDispatch();\r\n    const { users } = useSelector(selectUsersState);\r\n    const [admins, setAdmins] = useState<string[]>([]);\r\n\r\n    const user = useSelector(selectAuthState).user;\r\n    const AllUsers: User[] = Object.assign([], users);\r\n    const { register, control, handleSubmit, errors } = useForm({\r\n      mode: 'onChange',\r\n      resolver: yupResolver(validationSchema),\r\n      defaultValues: {\r\n        email: '',\r\n      },\r\n    });\r\n\r\n    if (user) {AllUsers.push(user);}\r\n\r\n    const selectAdminsOnChange = (e: any, selectedOption: User[]) => {\r\n        setAdmins(selectedOption.map((s) => s.id));\r\n    };\r\n\r\n    const handleAddAdmins = (e: React.FormEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n\r\n        if (editMode === \"admin\") {\r\n          dispatch(addAdmins(admins, closeDialog));\r\n        }\r\n        else {\r\n          if (bugId) {\r\n            dispatch(assignBugTo(bugId, admins, closeDialog))\r\n          }\r\n        }\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleInviteAdmin = (data: InviteAdminPayload) => {\r\n      dispatch(inviteAdmin(data, closeDialog));\r\n    }\r\n    \r\n    const SelectAddAdmin = () => {\r\n      setSelect(\"add\");\r\n    }\r\n\r\n    const SelectInviteAdmin = () => {\r\n      setSelect(\"invite\");\r\n    }\r\n\r\n    return (\r\n        <form\r\n          onSubmit={select === \"invite\" ? handleSubmit(handleInviteAdmin) : handleAddAdmins}\r\n        >\r\n      {select === \"\" && editMode !== 'assign' ? (\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          className={classes.submitBtn}\r\n          type=\"button\"\r\n          onClick={SelectAddAdmin} \r\n      >\r\n        ADD ADMINISTRATOR (user must already exist)\r\n      </Button>\r\n      ) : '' }\r\n      {select === \"\" && editMode !== 'assign' ? (\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        fullWidth\r\n        className={classes.submitBtn}\r\n        type=\"button\"\r\n        onClick={SelectInviteAdmin}\r\n      >\r\n        INVITE ADMINISTRATOR \r\n      </Button>\r\n      ) : '' }\r\n\r\n          {editMode === \"admin\" && select === \"add\" ? (\r\n            <Autocomplete\r\n              style={{ marginTop: 0 }}\r\n              multiple\r\n              filterSelectedOptions\r\n              onChange={selectAdminsOnChange}\r\n              options={\r\n                users.filter((u) => !currentAdmins?.includes(u.id) && u.username !== \"user\")\r\n              }\r\n              getOptionLabel={(option) => option.username}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  required={editMode === 'admin'}\r\n                  label=\"Select admin(s)\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    startAdornment: (\r\n                      <>\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          style={{ paddingLeft: '0.4em' }}\r\n                        >\r\n                          <GroupIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                        {params.InputProps.startAdornment}\r\n                      </>\r\n                    ),\r\n                  }}\r\n                  inputProps={{\r\n                    ...params.inputProps,\r\n                    required: admins.length === 0\r\n                  }}\r\n                />\r\n              )}\r\n              renderOption={(option) => (\r\n                <ListItem dense component=\"div\">\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classes.avatar}>\r\n                      {option.username.slice(0, 1)}\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={option.username}\r\n                    primaryTypographyProps={{\r\n                      color: 'secondary',\r\n                      variant: 'body1',\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              )}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    avatar={<Avatar>{option.username.slice(0, 1)}</Avatar>}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    label={option.username}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n            />\r\n            ) : editMode === 'assign' && \r\n            <Autocomplete\r\n              style={{ marginTop: 0 }}\r\n              multiple\r\n              filterSelectedOptions\r\n              onChange={selectAdminsOnChange}\r\n              options={\r\n                  AllUsers.filter((u) => currentAdmins?.includes(u.id))\r\n              }\r\n              getOptionLabel={(option) => option.username}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Select admin(s) to assign the bug to\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    startAdornment: (\r\n                      <>\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          style={{ paddingLeft: '0.4em' }}\r\n                        >\r\n                          <GroupIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                        {params.InputProps.startAdornment}\r\n                      </>\r\n                    ),\r\n                  }}\r\n                  inputProps={{\r\n                    ...params.inputProps,\r\n                    required: admins.length === 0\r\n                  }}\r\n                />\r\n              )}\r\n              renderOption={(option) => (\r\n                <ListItem dense component=\"div\">\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classes.avatar}>\r\n                      {option.username.slice(0, 1)}\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={option.username}\r\n                    primaryTypographyProps={{\r\n                      color: 'secondary',\r\n                      variant: 'body1',\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              )}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    avatar={<Avatar>{option.username.slice(0, 1)}</Avatar>}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    label={option.username}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n            />\r\n          }\r\n          {editMode === \"admin\" && select === \"add\" ? (\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className={classes.submitBtn}\r\n            type=\"submit\"\r\n          >\r\n           Add New Administrators\r\n\r\n          </Button>\r\n          ) : editMode === 'assign' && (\r\n            <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className={classes.submitBtn}\r\n            type=\"submit\"\r\n          >\r\n           Assign Bug\r\n\r\n          </Button>\r\n        )}\r\n\r\n        {editMode === \"admin\" && select === \"invite\" ? (\r\n          <><TextField\r\n            className={classes.fieldMargin}\r\n            inputRef={register}\r\n            name=\"email\"\r\n            required\r\n            fullWidth\r\n            type=\"text\"\r\n            label=\"Email Adress\"\r\n            variant=\"outlined\"\r\n            error={'email' in errors}\r\n            helperText={'email' in errors ? errors.email?.message : ''}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <TitleIcon color=\"primary\" />\r\n                </InputAdornment>\r\n              ),\r\n            }} /><Button\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              className={classes.submitBtn}\r\n              type=\"submit\"\r\n            >\r\n              Invite Administrator\r\n\r\n            </Button></>\r\n\r\n        ) : '' }\r\n\r\n        </form>\r\n      );\r\n}\r\n\r\n\r\nexport default AdminForm;\r\n\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\AdminsCard.tsx",["521"],"import React, { useEffect, useState } from 'react';\r\nimport FilterBar from '../../components/FilterBar';\r\nimport InfoText from '../../components/InfoText';\r\n\r\nimport { Typography, Collapse } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport AdminsTable from './AdminTable';\r\nimport { User } from '../../redux/types';\r\n\r\nconst AdminsCard: React.FC<{\r\n  admins: User[];\r\n  viewAdmins: boolean;\r\n  isMobile: boolean;\r\n}> = ({ admins, viewAdmins, isMobile }) => {\r\n  const classes = useMainPageStyles();\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const filteredMembers = admins.filter((a) =>\r\n    a.username.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  const UsersDataToDisplay = () => {\r\n    if (filteredMembers.length === 0) {\r\n      return (\r\n        <InfoText text=\"No matches found.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ marginTop: '1em' }}>\r\n          <AdminsTable\r\n            admins={filteredMembers}\r\n            isMobile={isMobile}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Collapse\r\n      in={viewAdmins}\r\n      timeout=\"auto\"\r\n      unmountOnExit\r\n      className={classes.membersWrapper}\r\n    >\r\n      <div className={classes.flexInput}>\r\n        <Typography\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n          color=\"secondary\"\r\n          className={classes.flexHeader}\r\n        >\r\n          <PeopleAltOutlinedIcon\r\n            fontSize={isMobile ? 'default' : 'large'}\r\n            style={{ marginRight: '0.2em' }}\r\n          />\r\n          Other Admins\r\n        </Typography>\r\n        <div className={classes.filterMembersInput}>\r\n          <FilterBar\r\n            filterValue={filterValue}\r\n            setFilterValue={setFilterValue}\r\n            label=\"Admins\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {UsersDataToDisplay()}\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default AdminsCard;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsMenu.tsx",["522"],"import { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBug, closeReopenBug, selectAllAdmins } from '../../redux/slices/bugsSlice';\r\nimport { BugPayload, User } from '../../redux/types';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport BugForm from './BugForm';\r\nimport NoteForm from './NoteForm';\r\n\r\nimport { Menu, IconButton, MenuItem } from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport AdminForm from './AdminForm';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\n\r\ninterface BugsMenuProps {\r\n  bugId: string;\r\n  currentData: BugPayload;\r\n  isResolved: boolean;\r\n  iconSize?: 'small' | 'default' | 'large';\r\n  isAdmin: boolean | undefined;\r\n}\r\n\r\nconst BugsMenu: React.FC<BugsMenuProps> = ({\r\n  bugId,\r\n  currentData,\r\n  isResolved,\r\n  iconSize,\r\n  isAdmin,\r\n}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const admins = useSelector(selectAllAdmins);\r\n  const { user } = useSelector(selectAuthState);\r\n  \r\n  if (user) {admins.push(user);}\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDeleteBug = () => {\r\n    dispatch(deleteBug(bugId, history));\r\n  };\r\n\r\n  const handleCloseBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'close'));\r\n  };\r\n\r\n  const handleReopenBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'reopen'));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleOpenMenu} size=\"small\">\r\n        <MoreHorizIcon color=\"primary\" fontSize={iconSize || 'large'} />\r\n      </IconButton>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseMenu}\r\n        marginThreshold={8}\r\n        elevation={4}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={handleCloseMenu}\r\n          component={RouterLink}\r\n          to={`/bugs/${bugId}`}\r\n        >\r\n          <OpenInNewIcon style={{ marginRight: '10px' }} />\r\n          Bug Details\r\n        </MenuItem>\r\n        <FormDialog\r\n          triggerBtn={{\r\n            type: 'menu',\r\n            text: 'Leave A Note',\r\n            icon: CommentOutlinedIcon,\r\n            iconStyle: { marginRight: '10px' },\r\n            closeMenu: handleCloseMenu,\r\n          }}\r\n          title=\"Post a note\"\r\n        >\r\n          <NoteForm isReply={false} isEditMode={false} bugId={bugId} />\r\n        </FormDialog>\r\n          {isAdmin ? (\r\n          <FormDialog\r\n          triggerBtn={{\r\n            type: 'menu',\r\n            text: 'Update Bug',\r\n            icon: EditOutlinedIcon,\r\n            iconStyle: { marginRight: '10px' },\r\n            closeMenu: handleCloseMenu,\r\n          }}\r\n          title=\"Edit the bug details\"\r\n        >\r\n          <BugForm\r\n            isEditMode={true}\r\n            bugId={bugId}\r\n            currentData={currentData}\r\n          />\r\n        </FormDialog>\r\n          ): ''}\r\n        {(isResolved && isAdmin) ? (\r\n          <ConfirmDialog\r\n            title=\"Re-open the Bug\"\r\n            contentText=\"Are you sure you want to re-open the bug?\"\r\n            actionBtnText=\"Re-open Bug\"\r\n            triggerBtn={{\r\n              type: 'menu',\r\n              text: 'Re-open Bug',\r\n              icon: RedoIcon,\r\n              iconStyle: { marginRight: '10px' },\r\n              closeMenu: handleCloseMenu,\r\n            }}\r\n            actionFunc={handleReopenBug}\r\n          />\r\n        ) : '' }\r\n        {(!isResolved && isAdmin) ? (\r\n          <ConfirmDialog\r\n            title=\"Close the Bug\"\r\n            contentText=\"Are you sure you want to close the bug?\"\r\n            actionBtnText=\"Close Bug\"\r\n            triggerBtn={{\r\n              type: 'menu',\r\n              text: 'Close Bug',\r\n              icon: DoneOutlineIcon,\r\n              iconStyle: { marginRight: '10px' },\r\n              closeMenu: handleCloseMenu,\r\n            }}\r\n            actionFunc={handleCloseBug}\r\n          />\r\n        ) : '' }\r\n        {isAdmin ? (\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Bug\"\r\n            contentText=\"Are you sure you want to permanently delete the bug?\"\r\n            actionBtnText=\"Delete Bug\"\r\n            triggerBtn={{\r\n              type: 'menu',\r\n              text: 'Delete Bug',\r\n              icon: DeleteOutlineIcon,\r\n              iconStyle: { marginRight: '10px' },\r\n              closeMenu: handleCloseMenu,\r\n            }}\r\n            actionFunc={handleDeleteBug}\r\n        />\r\n        ) : ''}\r\n        {isAdmin ? (\r\n          <FormDialog\r\n          triggerBtn={{\r\n            type: 'menu',\r\n            text: 'Assign bug',\r\n            icon: ControlPointIcon,\r\n            iconStyle: { marginRight: '10px' },\r\n            closeMenu: handleCloseMenu,\r\n          }}\r\n          title=\"Assign the bug to specific admins\"\r\n        >\r\n          <AdminForm\r\n            editMode=\"assign\"\r\n            currentAdmins={admins.map((a) => a.id)}\r\n            bugId={bugId}\r\n          />\r\n        </FormDialog>\r\n        ) : '' }\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsMenu;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugCard.tsx",["523","524"],"import React, { useState } from 'react';\r\n\r\nimport { Collapse } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport BugsDetailsPage from './BugsDetailsPage';\r\n\r\nconst BugCard: React.FC<{\r\n  viewBug: boolean;\r\n  bugId: string;\r\n}> = ({ viewBug, bugId }) => {\r\n  const classes = useMainPageStyles();\r\n\r\n  const BugDataToDisplay = () => {\r\n    return (\r\n        <div style={{ marginTop: '1em' }}>\r\n            <BugsDetailsPage\r\n                bugId={ bugId } \r\n            />\r\n        </div>\r\n      );\r\n    }\r\n\r\n  return (\r\n    <Collapse\r\n      in={viewBug}\r\n      timeout=\"auto\"\r\n      unmountOnExit\r\n      className={classes.membersWrapper}\r\n    >\r\n      {BugDataToDisplay()}\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default BugCard;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\SortBar.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\FilterBar.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugForm.tsx",["525","526"],"import { useForm, Controller } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  createNewBug,\r\n  editBug,\r\n  clearSubmitBugError,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { BugPayload } from '../../redux/types';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport backendUrl from '../../backendUrl';\r\nimport {\r\n  TextField,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Button,\r\n  InputAdornment,\r\n  FormLabel,\r\n  FormControl,\r\n  Input,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport React from 'react';\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(3, 'Must be at least 3 characters')\r\n    .max(60, 'Must be at most 60 characters'),\r\n\r\n  description: yup.string().required('Required'),\r\n});\r\n\r\ninterface BugFormProps {\r\n  closeDialog?: () => void;\r\n  isEditMode: boolean;\r\n  currentData?: BugPayload;\r\n  bugId?: string;\r\n}\r\n\r\nconst BugForm: React.FC<BugFormProps> = ({\r\n  closeDialog,\r\n  isEditMode,\r\n  currentData,\r\n  bugId,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { submitError, submitLoading } = useSelector(selectBugsState);\r\n\r\n  const { register, control, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      title: currentData?.title || '',\r\n      description: currentData?.description || '',\r\n      priority: currentData?.priority || 'low',\r\n    },\r\n  });\r\n\r\n  const handleCreateBug = async (data: BugPayload) => {\r\n    imageForm?.submit();\r\n    dispatch(createNewBug(data, closeDialog));  \r\n  };\r\n\r\n  const handleUpdateBug = (data: BugPayload) => {\r\n    console.log('avant')\r\n    imageForm?.submit();\r\n    console.log('apres')\r\n    dispatch(editBug(bugId as string, data, closeDialog));\r\n  };\r\n\r\n  const imageForm = document.getElementById(\"image-form\") as HTMLFormElement;\r\n\r\n  return (\r\n\r\n    <><form id=\"image-form\" method=\"POST\" action={backendUrl + '/bugs/upload'} encType=\"multipart/form-data\">\r\n      <input type=\"file\" name='image' accept=\"image/*, video/*\"></input>\r\n    </form>\r\n    <br></br>\r\n    <form\r\n      onSubmit={handleSubmit(isEditMode ? handleUpdateBug : handleCreateBug)}\r\n    >\r\n        <TextField\r\n          inputRef={register}\r\n          name=\"title\"\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"Bug Title\"\r\n          variant=\"outlined\"\r\n          error={'title' in errors}\r\n          helperText={'title' in errors ? errors.title?.message : ''}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <TitleIcon color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }} />\r\n        <TextField\r\n          className={classes.fieldMargin}\r\n          multiline\r\n          rows={1}\r\n          rowsMax={4}\r\n          inputRef={register}\r\n          name=\"description\"\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"Description\"\r\n          variant=\"outlined\"\r\n          error={'description' in errors}\r\n          helperText={'description' in errors ? errors.description?.message : ''}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SubjectIcon color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }} />\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"priority\"\r\n          as={<FormControl className={classes.radioGroupForm}>\r\n            <RadioGroup row defaultValue=\"low\" className={classes.radioGroup}>\r\n              <FormLabel className={classes.radioGroupLabel}>\r\n                Priority:\r\n              </FormLabel>\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel\r\n                  value=\"low\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Low\" />\r\n                <FormControlLabel\r\n                  value=\"medium\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Medium\" />\r\n                <FormControlLabel\r\n                  value=\"high\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"High\" />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>} />\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          className={classes.submitBtn}\r\n          type=\"submit\"\r\n          disabled={submitLoading}\r\n        >\r\n          {isEditMode ? 'Update Bug' : 'Create New Bug'}\r\n        </Button>\r\n        {submitError && (\r\n          <ErrorBox\r\n            errorMsg={submitError}\r\n            clearErrorMsg={() => dispatch(clearSubmitBugError())} />\r\n        )}\r\n      </form></>\r\n\r\n  );\r\n};\r\n\r\nexport default BugForm;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\AdminTable.tsx",["527"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\n\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport { removeAdmin } from '../../redux/slices/usersSlice';\r\nimport { User } from '../../redux/types';\r\n\r\nconst adminHeaders = ['Username'];\r\n\r\nconst AdminsTable: React.FC<{\r\n  admins: User[];\r\n  isMobile: boolean;\r\n}> = ({ admins, isMobile }) => {\r\n  const classes = useTableStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const isAdmin = user?.isAdmin;\r\n\r\n  const handleRemoveAdmin = (adminId: string) => {\r\n    dispatch(removeAdmin(adminId));\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.scrollableTable}>\r\n      <Table stickyHeader size={isMobile ? 'small' : 'medium'}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {adminHeaders.map((a) => (\r\n              <TableCell key={a} align=\"center\">\r\n                {a}\r\n              </TableCell>\r\n            ))}\r\n            {isAdmin && <TableCell align=\"center\">Remove</TableCell>}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {admins.map((a) => (\r\n            <TableRow key={a.id}>\r\n              <TableCell align=\"center\">\r\n                {a.username} {a.id === user?.id && '(You)'}\r\n              </TableCell>\r\n              {isAdmin && (\r\n                <TableCell align=\"center\">\r\n                  {a.id === user?.id ? (\r\n                    <BlockIcon\r\n                      color=\"secondary\"\r\n                      fontSize={isMobile ? 'default' : 'large'}\r\n                    />\r\n                  ) : (\r\n                    <ConfirmDialog\r\n                      title=\"Confirm Remove Admin\"\r\n                      contentText={`Are you sure you want to remove ${a.username} from the admin team?`}\r\n                      actionBtnText=\"Remove Admin\"\r\n                      triggerBtn={{\r\n                        type: 'icon',\r\n                        iconSize: isMobile ? 'default' : 'large',\r\n                        icon: HighlightOffIcon,\r\n                        size: 'small',\r\n                      }}\r\n                      actionFunc={() => handleRemoveAdmin(a.id)}\r\n                    />\r\n                  )}\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AdminsTable;\r\n",["528","529"],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\BugsDetailsPage.tsx",["530","531","532","533","534"],"import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  selectBugsById,\r\n  deleteBug,\r\n  closeReopenBug,\r\n  selectAllAdmins,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { RootState } from '../../redux/store';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport BugForm from './BugForm';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport NotesCard from './NotesCard';\r\nimport { formatDateTime } from '../../utils/helperFuncs';\r\nimport { priorityStyles, statusStyles } from '../../styles/customStyles';\r\nimport CSS from 'csstype';\r\n\r\nimport { Paper, Typography, Divider, useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useMainPageStyles, useTableStyles } from '../../styles/muiStyles';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport AdminForm from './AdminForm';\r\nimport { selectUsersState } from '../../redux/slices/usersSlice';\r\n/*\r\ninterface ParamTypes {\r\n  bugId: string;\r\n}*/\r\n\r\nconst BugsDetailsPage: React.FC<{\r\n  bugId: string;\r\n  }> = ({ bugId }) => {\r\n  const Tableclasses = useTableStyles();\r\n  const classes = useMainPageStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  //const { bugId } = useParams<ParamTypes>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const bug = useSelector((state: RootState) =>\r\n    selectBugsById(state, bugId)\r\n  );\r\n  const assign = bug?.assignments;\r\n  const adminsAssignedIds = assign?.map((a) => a.adminId);\r\n  let isVideo: boolean = false;\r\n  if (bug?.filePath) {\r\n    if (bug?.filePath.includes(\"mp4\")) {\r\n      isVideo = true;\r\n    }\r\n  }\r\n  const adminsAssigned: string[] = [];\r\n  const { user } = useSelector(selectAuthState);\r\n  const users = useSelector(selectUsersState).users;\r\n  // create array containing the usernames of admins assigned to this specific bug\r\n  if (adminsAssignedIds) {\r\n    for (let i=0; i<adminsAssignedIds?.length; i++) {\r\n      if (users[i]) {\r\n      if (users[i].id === adminsAssignedIds[i]) {\r\n        adminsAssigned.push(users[i].username);\r\n        adminsAssigned.push(' ');\r\n      }\r\n    }\r\n      if (adminsAssignedIds[i] === user?.id) {\r\n        adminsAssigned.push(user.username);\r\n        adminsAssigned.push(' ');\r\n      }\r\n    }\r\n  }\r\n\r\n  const admins = useSelector(selectAllAdmins);\r\n  if (user?.isAdmin) {\r\n    admins.push(user);\r\n  }\r\n\r\n  if (!bug) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.notFoundPaper}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"secondary\"\r\n            className={classes.error404Text}\r\n            style={{ marginTop: '5em' }}\r\n          >\r\n            404: Bug Not Found!\r\n          </Typography>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    createdAt,\r\n    updatedBy,\r\n    updatedAt,\r\n    closedBy,\r\n    closedAt,\r\n    reopenedBy,\r\n    reopenedAt,\r\n    notes,\r\n    assignments,\r\n    filePath,\r\n  } = bug;\r\n\r\n  const handleDeleteBug = () => {\r\n    dispatch(deleteBug(bugId, history));\r\n  };\r\n\r\n  const handleCloseBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'close'));\r\n  };\r\n\r\n  const handleReopenBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'reopen'));\r\n  };\r\n\r\n  const statusCSS: CSS.Properties = {\r\n    ...statusStyles(isResolved),\r\n    display: 'inline',\r\n    padding: '0.20em 0.4em',\r\n  };\r\n\r\n  const statusInfo = () => {\r\n    if (!isResolved && reopenedAt && reopenedBy) {\r\n      return (\r\n        <span>\r\n          <div style={statusCSS}>Re-opened</div> -{' '}\r\n          <em>{formatDateTime(reopenedAt)}</em> ~{' '}\r\n          <strong>{reopenedBy.username}</strong>\r\n        </span>\r\n      );\r\n    } else if (isResolved && closedAt && closedBy) {\r\n      return (\r\n        <span>\r\n          <div style={statusCSS}>Closed</div> -{' '}\r\n          <em>{formatDateTime(closedAt)}</em> ~{' '}\r\n          <strong>{closedBy.username}</strong>\r\n        </span>\r\n      );\r\n    } else {\r\n      return <div style={statusCSS}>Open</div>;\r\n    }\r\n  };\r\n\r\n  const closeReopenBtns = () => {\r\n    if (isResolved) {\r\n      return (\r\n        <ConfirmDialog\r\n          title=\"Re-open the Bug\"\r\n          contentText=\"Are you sure you want to re-open the bug?\"\r\n          actionBtnText=\"Re-open Bug\"\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Re-open Bug',\r\n            icon: RedoIcon,\r\n          }}\r\n          actionFunc={handleReopenBug}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <ConfirmDialog\r\n          title=\"Close the Bug\"\r\n          contentText=\"Are you sure you want to close the bug?\"\r\n          actionBtnText=\"Close Bug\"\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Close Bug',\r\n            icon: DoneOutlineIcon,\r\n          }}\r\n          actionFunc={handleCloseBug}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateBugBtn = () => {\r\n    return (\r\n      <FormDialog\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Update Bug Info',\r\n          icon: EditOutlinedIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        title=\"Edit the bug details\"\r\n      >\r\n        <BugForm\r\n          isEditMode={true}\r\n          bugId={id}\r\n          currentData={{ title, description, priority }}\r\n        />\r\n      </FormDialog>\r\n    );\r\n  };\r\n\r\n  const deleteBugBtn = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        title=\"Confirm Delete Bug\"\r\n        contentText=\"Are you sure you want to permanently delete the bug?\"\r\n        actionBtnText=\"Delete Bug\"\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Delete Bug',\r\n          icon: DeleteOutlineIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        actionFunc={handleDeleteBug}\r\n      />\r\n    );\r\n  };\r\n\r\n  const assignBugBtn = () => {\r\n    return (\r\n      <FormDialog\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Assign bug',\r\n          icon: EditOutlinedIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        title=\"Assign the bug to specific admin(s)\"\r\n      >\r\n        <AdminForm\r\n          editMode=\"assign\"\r\n          currentAdmins={admins.map((a) => a.id)}\r\n          bugId={bugId}\r\n        />\r\n      </FormDialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={Tableclasses.scrollableTable}>\r\n        <Paper className={classes.detailsHeader}>\r\n          <Typography variant={isMobile ? 'h5' : 'h4'} color=\"secondary\">\r\n            <strong>{title}</strong>\r\n          </Typography>\r\n          <Divider style={{ margin: '0.5em 0' }} />\r\n          <Typography color=\"secondary\" variant=\"h6\">\r\n            {description}\r\n          </Typography>\r\n          <Typography\r\n            color=\"secondary\"\r\n            variant=\"subtitle2\"\r\n            className={classes.marginText}\r\n          >\r\n            Status: {statusInfo()}\r\n          </Typography>\r\n          {(bug.filePath && !isVideo) ? (\r\n            <img src={'/Images/' + bug.filePath}></img>\r\n          ) : '' }\r\n          {(bug.filePath && isVideo) ? (\r\n            <video width=\"320\" height=\"240\" controls>\r\n            <source src={'/Images/' + bug.filePath} type=\"video/mp4\"></source>\r\n            Your browser does not support the video tag.\r\n          </video>\r\n          ) : '' }\r\n\r\n\r\n          <Typography\r\n            color=\"secondary\"\r\n            variant=\"subtitle2\"\r\n            className={classes.marginText}\r\n          >\r\n            Priority:{' '}\r\n            <div\r\n              style={{\r\n                ...priorityStyles(priority),\r\n                display: 'inline',\r\n                padding: '0.20em 0.4em',\r\n                textTransform: 'capitalize',\r\n              }}\r\n            >\r\n              {priority}\r\n            </div>\r\n          </Typography>\r\n          <Typography color=\"secondary\" variant=\"subtitle2\">\r\n            Created by: <strong>{createdBy.username}</strong>\r\n          </Typography>\r\n          <Typography color=\"secondary\" variant=\"subtitle2\">\r\n            Assigned to: <strong>{adminsAssigned}</strong>\r\n          </Typography>\r\n          {updatedBy && updatedAt && (\r\n            <Typography color=\"secondary\" variant=\"subtitle2\">\r\n              Updated: <em>{formatDateTime(updatedAt)}</em> ~{' '}\r\n              <strong>{updatedBy.username}</strong>\r\n            </Typography>\r\n          )}\r\n          {user?.isAdmin ? (\r\n          <div className={classes.btnsWrapper}>\r\n            {closeReopenBtns()}\r\n            {updateBugBtn()}\r\n            {deleteBugBtn()}\r\n            {assignBugBtn()}\r\n          </div>\r\n          ) : '' }\r\n        </Paper>\r\n        <NotesCard\r\n          notes={notes}\r\n          bugId={id}\r\n          isMobile={isMobile}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsDetailsPage;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\NotesCard.tsx",["535"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteNote } from '../../redux/slices/bugsSlice';\r\nimport { Note } from '../../redux/types';\r\nimport { RootState } from '../../redux/store';\r\nimport SortBar from '../../components/SortBar';\r\nimport sortNotes from '../../utils/sortNotes';\r\nimport NoteForm from './NoteForm';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport InfoText from '../../components/InfoText';\r\nimport { formatTimeAgo } from '../../utils/helperFuncs';\r\n\r\nimport { Paper, Typography, Avatar, Divider } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\n\r\nexport type NoteSortValues = 'newest' | 'oldest' | 'updated';\r\n\r\nconst menuItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'updated', label: 'Recently Updated' },\r\n];\r\n\r\nconst NotesCard: React.FC<{\r\n  notes: Note[];\r\n  bugId: string;\r\n  isMobile: boolean;\r\n}> = ({ notes, bugId, isMobile }) => {\r\n  const classes = useMainPageStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n  const [sortBy, setSortBy] = useState<NoteSortValues>('newest');\r\n\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSortBy(e.target.value as NoteSortValues);\r\n  };\r\n\r\n  const sortedNotes = sortNotes(notes, sortBy);\r\n\r\n  const handleDeleteNote = (noteId: number) => {\r\n    dispatch(deleteNote(bugId, noteId));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.notesPaper}>\r\n      <div className={classes.flexInput}>\r\n        <Typography\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n          color=\"secondary\"\r\n          className={classes.flexHeader}\r\n        >\r\n          <ForumOutlinedIcon\r\n            fontSize={isMobile ? 'default' : 'large'}\r\n            style={{ marginRight: '0.2em' }}\r\n          />\r\n          Notes\r\n        </Typography>\r\n        <div className={classes.sortNotesInput}>\r\n          <SortBar\r\n            sortBy={sortBy}\r\n            handleSortChange={handleSortChange}\r\n            menuItems={menuItems}\r\n            label=\"Notes\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <FormDialog\r\n        triggerBtn={\r\n          isMobile\r\n            ? { type: 'fab', variant: 'round', icon: CommentOutlinedIcon }\r\n            : {\r\n                type: 'normal',\r\n                text: 'Leave A Note',\r\n                icon: CommentOutlinedIcon,\r\n                size: 'large',\r\n                style: { marginTop: '1em' },\r\n              }\r\n        }\r\n        title=\"Post a note\"\r\n      >\r\n        <NoteForm isReply={false} isEditMode={false} bugId={bugId} />\r\n      </FormDialog>\r\n      <div className={classes.notesWrapper}>\r\n        <Divider />\r\n        {sortedNotes.length === 0 && (\r\n          <InfoText\r\n            text=\"No notes added yet.\"\r\n            variant={isMobile ? 'h6' : 'h5'}\r\n          />\r\n        )}\r\n        {sortedNotes.map((n) => (\r\n          <div key={n.id}>\r\n            <div className={classes.singleNote}>\r\n              <Avatar className={classes.avatar}>\r\n                {n.author.username.slice(0, 1)}\r\n              </Avatar>\r\n              <div>\r\n                <Typography color=\"secondary\" variant=\"caption\">\r\n                  {n.author.username}\r\n                </Typography>\r\n                <Typography color=\"secondary\" variant=\"caption\">\r\n                  <em> • {formatTimeAgo(n.createdAt)} ago</em>\r\n                </Typography>\r\n                {n.updatedAt !== n.createdAt && (\r\n                  <Typography color=\"secondary\" variant=\"caption\">\r\n                    {' '}\r\n                    • updated <em>{formatTimeAgo(n.updatedAt)} ago</em>\r\n                  </Typography>\r\n                )}\r\n                <Typography\r\n                  color=\"secondary\"\r\n                  variant=\"subtitle1\"\r\n                  className={classes.noteBody}\r\n                >\r\n                  {n.body}\r\n                </Typography>\r\n                <div className={classes.notesBtnWrapper}>\r\n                <FormDialog\r\n                  triggerBtn={{\r\n                    type: 'normal',\r\n                    text: 'Reply',\r\n                    icon: ReplyIcon,\r\n                    variant: 'outlined',\r\n                    size: 'small',\r\n                    color: 'secondary',\r\n                    style: { marginRight: '1em' },\r\n                  }}\r\n                  title=\"Reply\"\r\n                >\r\n                  <NoteForm \r\n                    isReply={true}\r\n                    isEditMode={false}\r\n                    bugId={bugId}\r\n                    noteId={n.id}\r\n                    currentBody={n.body}\r\n                  />\r\n                </FormDialog>\r\n                  {((n.author.id === user?.id) && (user?.username !== \"user\")) && (\r\n                    <FormDialog\r\n                      triggerBtn={{\r\n                        type: 'normal',\r\n                        text: 'Edit',\r\n                        icon: EditIcon,\r\n                        variant: 'outlined',\r\n                        size: 'small',\r\n                        style: { marginRight: '1em' },\r\n                        color: 'secondary',\r\n                      }}\r\n                      title=\"Edit the note\"\r\n                    >\r\n                      <NoteForm\r\n                        isReply={false}\r\n                        isEditMode={true}\r\n                        bugId={bugId}\r\n                        noteId={n.id}\r\n                        currentBody={n.body}\r\n                      />\r\n                    </FormDialog>\r\n                  )}\r\n                  {(((n.author.id === user?.id) || (user?.isAdmin)) && (user?.username !== \"user\")) && (\r\n                    <ConfirmDialog\r\n                      title=\"Confirm Delete Note\"\r\n                      contentText=\"Are you sure you want to delete the note?\"\r\n                      actionBtnText=\"Delete Note\"\r\n                      triggerBtn={{\r\n                        type: 'normal',\r\n                        text: 'Delete',\r\n                        icon: DeleteIcon,\r\n                        variant: 'outlined',\r\n                        size: 'small',\r\n                        color: 'secondary',\r\n                      }}\r\n                      actionFunc={() => handleDeleteNote(n.id)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default NotesCard;\r\n","C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\components\\ConfirmDialog.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Main\\NoteForm.tsx",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\utils\\sortNotes.ts",[],"C:\\Users\\Williams\\Documents\\GitHub\\Bug-tracker-VariaMos\\client\\src\\pages\\Auth\\InviteVerificationPage.tsx",["536","537","538","539","540","541","542","543","544","545"],"import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  signup,\r\n  clearAuthError,\r\n  setAuthError,\r\n  selectAuthState,\r\n  verifyCode,\r\n} from '../../redux/slices/authSlice';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport BugIcon from '../../svg/bug-logo.svg';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Link,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport { useAuthPageStyles } from '../../styles/muiStyles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport DemoCredsBox from '../../components/DemoCredsBox';\r\nimport { InviteCodeData } from '../../redux/types';\r\nimport SignupPage from './SignupPage';\r\n\r\ninterface InviteVerificationPageProps {\r\n    closeDialog?: () => void;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n  code: yup\r\n    .string()\r\n    .required('Required')\r\n\r\n});\r\n\r\nconst InviteVerificationPage: React.FC<InviteVerificationPageProps> = ({\r\n    closeDialog\r\n  }) => {\r\n  const classes = useAuthPageStyles();\r\n  const dispatch = useDispatch();\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const { loading, error } = useSelector(selectAuthState);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n\r\n  const handleVerifyCode = (inviteCode: InviteCodeData) => {\r\n    const verified = verifyCode(inviteCode, closeDialog);  \r\n    verified.then(function(result) {\r\n        setIsVerified(result);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div> \r\n        {!isVerified ? (\r\n            <Paper className={classes.root} elevation={2}>\r\n            <img src={BugIcon} alt=\"bug-logo\" className={classes.titleLogo} />\r\n\r\n            <form onSubmit={handleSubmit(handleVerifyCode)} className={classes.form}>\r\n            <div className={classes.inputField}>\r\n                <TextField\r\n                required\r\n                fullWidth\r\n                inputRef={register}\r\n                name=\"code\"\r\n                type=\"text\"\r\n                label=\"Invitation code\"\r\n                variant=\"outlined\"\r\n                error={'code' in errors}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                        <PersonIcon color=\"primary\" />\r\n                    </InputAdornment>\r\n                    ),\r\n                }}\r\n                />\r\n            <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                fullWidth\r\n                startIcon={<ExitToAppIcon />}\r\n                type=\"submit\"\r\n                className={classes.submitButton}\r\n                disabled={loading}\r\n            >\r\n                Verify code\r\n            </Button>\r\n            </div>\r\n            <DemoCredsBox adminSignup={true}/>\r\n            </form>\r\n            </Paper>\r\n        ) : \r\n        <SignupPage adminMode={true}></SignupPage>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InviteVerificationPage;\r\n","C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\index.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\store.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\App.tsx",["546"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\themeSlice.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\usersSlice.ts",["547","548"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\bugsSlice.ts",["549","550"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\redux\\slices\\notificationSlice.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\localStorage.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\styles\\customTheme.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\styles\\muiStyles.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\Routes.tsx",["551","552","553","554","555"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\ToastNotification.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\NavBar.tsx",["556","557","558","559","560","561","562","563","564","565","566"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\helperFuncs.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\auth.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\assignment.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\bugs.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\users.ts",["567"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\services\\notes.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\UserMenuMobile.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\UserButtonsDesktop.tsx",["568","569","570","571"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Auth\\SignupPage.tsx",["572","573","574","575","576","577"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Auth\\InviteVerificationPage.tsx",["578","579","580","581","582","583","584","585","586","587","588"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsPage.tsx",["589","590","591","592","593"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\backendUrl.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\filterBugs.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\sortBugs.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\DarkModeSwitch.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\FormDialog.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\EmailForm.tsx",["594","595","596"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\ErrorBox.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\DemoCredsBox.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsActionCard.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\InfoText.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsListMobile.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsTable.tsx",["597","598","599"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\HideOnScroll.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\CustomDialogTitle.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\styles\\customStyles.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\AdminsCard.tsx",["600"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\AdminForm.tsx",["601"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugCard.tsx",["602","603"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsMenu.tsx",["604"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugForm.tsx",["605","606"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\SortBar.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\FilterBar.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\AdminTable.tsx",["607"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\BugsDetailsPage.tsx",["608","609","610","611","612"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\NotesCard.tsx",["613"],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\components\\ConfirmDialog.tsx",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\utils\\sortNotes.ts",[],"C:\\Users\\Williams\\Desktop\\Bug-tracker-VariaMos-test-sam\\client\\src\\pages\\Main\\NoteForm.tsx",[],{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","replacedBy":"617"},{"ruleId":"618","severity":1,"message":"619","line":13,"column":10,"nodeType":"620","messageId":"621","endLine":13,"endColumn":26},{"ruleId":"618","severity":1,"message":"622","line":7,"column":10,"nodeType":"620","messageId":"621","endLine":7,"endColumn":16},{"ruleId":"618","severity":1,"message":"623","line":8,"column":10,"nodeType":"620","messageId":"621","endLine":8,"endColumn":18},{"ruleId":"618","severity":1,"message":"624","line":21,"column":8,"nodeType":"620","messageId":"621","endLine":21,"endColumn":18},{"ruleId":"618","severity":1,"message":"625","line":22,"column":10,"nodeType":"620","messageId":"621","endLine":22,"endColumn":21},{"ruleId":"618","severity":1,"message":"626","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":22},{"ruleId":"618","severity":1,"message":"627","line":12,"column":10,"nodeType":"620","messageId":"621","endLine":12,"endColumn":25},{"ruleId":"618","severity":1,"message":"628","line":13,"column":10,"nodeType":"620","messageId":"621","endLine":13,"endColumn":19},{"ruleId":"618","severity":1,"message":"629","line":14,"column":10,"nodeType":"620","messageId":"621","endLine":14,"endColumn":43},{"ruleId":"618","severity":1,"message":"630","line":21,"column":9,"nodeType":"620","messageId":"621","endLine":21,"endColumn":19},{"ruleId":"618","severity":1,"message":"631","line":1,"column":18,"nodeType":"620","messageId":"621","endLine":1,"endColumn":28},{"ruleId":"618","severity":1,"message":"632","line":3,"column":35,"nodeType":"620","messageId":"621","endLine":3,"endColumn":40},{"ruleId":"618","severity":1,"message":"633","line":6,"column":8,"nodeType":"620","messageId":"621","endLine":6,"endColumn":15},{"ruleId":"618","severity":1,"message":"634","line":7,"column":10,"nodeType":"620","messageId":"621","endLine":7,"endColumn":28},{"ruleId":"618","severity":1,"message":"635","line":12,"column":3,"nodeType":"620","messageId":"621","endLine":12,"endColumn":13},{"ruleId":"618","severity":1,"message":"636","line":13,"column":3,"nodeType":"620","messageId":"621","endLine":13,"endColumn":7},{"ruleId":"618","severity":1,"message":"637","line":14,"column":3,"nodeType":"620","messageId":"621","endLine":14,"endColumn":9},{"ruleId":"618","severity":1,"message":"638","line":20,"column":8,"nodeType":"620","messageId":"621","endLine":20,"endColumn":20},{"ruleId":"618","severity":1,"message":"639","line":21,"column":8,"nodeType":"620","messageId":"621","endLine":21,"endColumn":21},{"ruleId":"618","severity":1,"message":"640","line":27,"column":9,"nodeType":"620","messageId":"621","endLine":27,"endColumn":16},{"ruleId":"618","severity":1,"message":"641","line":28,"column":11,"nodeType":"620","messageId":"621","endLine":28,"endColumn":19},{"ruleId":"618","severity":1,"message":"642","line":1,"column":10,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"643","line":3,"column":10,"nodeType":"620","messageId":"621","endLine":3,"endColumn":25},{"ruleId":"618","severity":1,"message":"644","line":13,"column":8,"nodeType":"620","messageId":"621","endLine":13,"endColumn":15},{"ruleId":"618","severity":1,"message":"625","line":15,"column":10,"nodeType":"620","messageId":"621","endLine":15,"endColumn":21},{"ruleId":"618","severity":1,"message":"619","line":16,"column":10,"nodeType":"620","messageId":"621","endLine":16,"endColumn":26},{"ruleId":"618","severity":1,"message":"645","line":16,"column":29,"nodeType":"620","messageId":"621","endLine":16,"endColumn":42},{"ruleId":"618","severity":1,"message":"619","line":20,"column":10,"nodeType":"620","messageId":"621","endLine":20,"endColumn":26},{"ruleId":"618","severity":1,"message":"646","line":21,"column":10,"nodeType":"620","messageId":"621","endLine":21,"endColumn":18},{"ruleId":"618","severity":1,"message":"647","line":37,"column":17,"nodeType":"620","messageId":"621","endLine":37,"endColumn":24},{"ruleId":"618","severity":1,"message":"648","line":37,"column":26,"nodeType":"620","messageId":"621","endLine":37,"endColumn":31},{"ruleId":"618","severity":1,"message":"649","line":3,"column":30,"nodeType":"620","messageId":"621","endLine":3,"endColumn":38},{"ruleId":"618","severity":1,"message":"650","line":27,"column":8,"nodeType":"620","messageId":"621","endLine":27,"endColumn":15},{"ruleId":"618","severity":1,"message":"651","line":30,"column":8,"nodeType":"620","messageId":"621","endLine":30,"endColumn":21},{"ruleId":"618","severity":1,"message":"652","line":35,"column":8,"nodeType":"620","messageId":"621","endLine":35,"endColumn":18},{"ruleId":"618","severity":1,"message":"653","line":36,"column":8,"nodeType":"620","messageId":"621","endLine":36,"endColumn":20},{"ruleId":"618","severity":1,"message":"654","line":70,"column":10,"nodeType":"620","messageId":"621","endLine":70,"endColumn":21},{"ruleId":"618","severity":1,"message":"655","line":7,"column":10,"nodeType":"620","messageId":"621","endLine":7,"endColumn":20},{"ruleId":"618","severity":1,"message":"656","line":25,"column":8,"nodeType":"620","messageId":"621","endLine":25,"endColumn":19},{"ruleId":"618","severity":1,"message":"657","line":52,"column":9,"nodeType":"620","messageId":"621","endLine":52,"endColumn":15},{"ruleId":"618","severity":1,"message":"658","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":17},{"ruleId":"618","severity":1,"message":"631","line":2,"column":18,"nodeType":"620","messageId":"621","endLine":2,"endColumn":28},{"ruleId":"618","severity":1,"message":"636","line":14,"column":3,"nodeType":"620","messageId":"621","endLine":14,"endColumn":7},{"ruleId":"618","severity":1,"message":"640","line":32,"column":9,"nodeType":"620","messageId":"621","endLine":32,"endColumn":16},{"ruleId":"618","severity":1,"message":"659","line":57,"column":23,"nodeType":"620","messageId":"621","endLine":57,"endColumn":30},{"ruleId":"618","severity":1,"message":"660","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"618","severity":1,"message":"661","line":5,"column":22,"nodeType":"620","messageId":"621","endLine":5,"endColumn":26},{"ruleId":"618","severity":1,"message":"623","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":25},{"ruleId":"618","severity":1,"message":"662","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":29},{"ruleId":"618","severity":1,"message":"663","line":23,"column":3,"nodeType":"620","messageId":"621","endLine":23,"endColumn":8},{"ruleId":"618","severity":1,"message":"664","line":24,"column":3,"nodeType":"620","messageId":"621","endLine":24,"endColumn":12},{"ruleId":"618","severity":1,"message":"660","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"614","replacedBy":"665"},{"ruleId":"616","replacedBy":"666"},{"ruleId":"618","severity":1,"message":"667","line":2,"column":10,"nodeType":"620","messageId":"621","endLine":2,"endColumn":19},{"ruleId":"618","severity":1,"message":"668","line":103,"column":5,"nodeType":"620","messageId":"621","endLine":103,"endColumn":14},{"ruleId":"618","severity":1,"message":"669","line":111,"column":5,"nodeType":"620","messageId":"621","endLine":111,"endColumn":16},{"ruleId":"618","severity":1,"message":"670","line":112,"column":5,"nodeType":"620","messageId":"621","endLine":112,"endColumn":13},{"ruleId":"671","severity":1,"message":"672","line":263,"column":13,"nodeType":"673","endLine":263,"endColumn":50},{"ruleId":"618","severity":1,"message":"674","line":6,"column":10,"nodeType":"620","messageId":"621","endLine":6,"endColumn":19},{"ruleId":"618","severity":1,"message":"631","line":3,"column":18,"nodeType":"620","messageId":"621","endLine":3,"endColumn":28},{"ruleId":"618","severity":1,"message":"675","line":6,"column":3,"nodeType":"620","messageId":"621","endLine":6,"endColumn":9},{"ruleId":"618","severity":1,"message":"676","line":7,"column":3,"nodeType":"620","messageId":"621","endLine":7,"endColumn":17},{"ruleId":"618","severity":1,"message":"677","line":8,"column":3,"nodeType":"620","messageId":"621","endLine":8,"endColumn":15},{"ruleId":"618","severity":1,"message":"678","line":12,"column":8,"nodeType":"620","messageId":"621","endLine":12,"endColumn":16},{"ruleId":"618","severity":1,"message":"635","line":20,"column":3,"nodeType":"620","messageId":"621","endLine":20,"endColumn":13},{"ruleId":"618","severity":1,"message":"679","line":22,"column":3,"nodeType":"620","messageId":"621","endLine":22,"endColumn":13},{"ruleId":"618","severity":1,"message":"636","line":23,"column":3,"nodeType":"620","messageId":"621","endLine":23,"endColumn":7},{"ruleId":"618","severity":1,"message":"680","line":48,"column":9,"nodeType":"620","messageId":"621","endLine":48,"endColumn":17},{"ruleId":"618","severity":1,"message":"648","line":50,"column":20,"nodeType":"620","messageId":"621","endLine":50,"endColumn":25},{"ruleId":"618","severity":1,"message":"619","line":13,"column":10,"nodeType":"620","messageId":"621","endLine":13,"endColumn":26},{"ruleId":"618","severity":1,"message":"622","line":7,"column":10,"nodeType":"620","messageId":"621","endLine":7,"endColumn":16},{"ruleId":"618","severity":1,"message":"623","line":8,"column":10,"nodeType":"620","messageId":"621","endLine":8,"endColumn":18},{"ruleId":"618","severity":1,"message":"624","line":21,"column":8,"nodeType":"620","messageId":"621","endLine":21,"endColumn":18},{"ruleId":"618","severity":1,"message":"625","line":22,"column":10,"nodeType":"620","messageId":"621","endLine":22,"endColumn":21},{"ruleId":"618","severity":1,"message":"626","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":22},{"ruleId":"618","severity":1,"message":"627","line":12,"column":10,"nodeType":"620","messageId":"621","endLine":12,"endColumn":25},{"ruleId":"618","severity":1,"message":"628","line":13,"column":10,"nodeType":"620","messageId":"621","endLine":13,"endColumn":19},{"ruleId":"618","severity":1,"message":"629","line":14,"column":10,"nodeType":"620","messageId":"621","endLine":14,"endColumn":43},{"ruleId":"618","severity":1,"message":"630","line":21,"column":9,"nodeType":"620","messageId":"621","endLine":21,"endColumn":19},{"ruleId":"618","severity":1,"message":"631","line":1,"column":18,"nodeType":"620","messageId":"621","endLine":1,"endColumn":28},{"ruleId":"618","severity":1,"message":"632","line":3,"column":35,"nodeType":"620","messageId":"621","endLine":3,"endColumn":40},{"ruleId":"618","severity":1,"message":"633","line":6,"column":8,"nodeType":"620","messageId":"621","endLine":6,"endColumn":15},{"ruleId":"618","severity":1,"message":"634","line":7,"column":10,"nodeType":"620","messageId":"621","endLine":7,"endColumn":28},{"ruleId":"618","severity":1,"message":"635","line":12,"column":3,"nodeType":"620","messageId":"621","endLine":12,"endColumn":13},{"ruleId":"618","severity":1,"message":"636","line":13,"column":3,"nodeType":"620","messageId":"621","endLine":13,"endColumn":7},{"ruleId":"618","severity":1,"message":"637","line":14,"column":3,"nodeType":"620","messageId":"621","endLine":14,"endColumn":9},{"ruleId":"618","severity":1,"message":"638","line":20,"column":8,"nodeType":"620","messageId":"621","endLine":20,"endColumn":20},{"ruleId":"618","severity":1,"message":"639","line":21,"column":8,"nodeType":"620","messageId":"621","endLine":21,"endColumn":21},{"ruleId":"618","severity":1,"message":"640","line":27,"column":9,"nodeType":"620","messageId":"621","endLine":27,"endColumn":16},{"ruleId":"618","severity":1,"message":"641","line":28,"column":11,"nodeType":"620","messageId":"621","endLine":28,"endColumn":19},{"ruleId":"618","severity":1,"message":"642","line":1,"column":10,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"643","line":3,"column":10,"nodeType":"620","messageId":"621","endLine":3,"endColumn":25},{"ruleId":"618","severity":1,"message":"644","line":13,"column":8,"nodeType":"620","messageId":"621","endLine":13,"endColumn":15},{"ruleId":"618","severity":1,"message":"625","line":15,"column":10,"nodeType":"620","messageId":"621","endLine":15,"endColumn":21},{"ruleId":"618","severity":1,"message":"619","line":16,"column":10,"nodeType":"620","messageId":"621","endLine":16,"endColumn":26},{"ruleId":"618","severity":1,"message":"649","line":3,"column":30,"nodeType":"620","messageId":"621","endLine":3,"endColumn":38},{"ruleId":"618","severity":1,"message":"650","line":27,"column":8,"nodeType":"620","messageId":"621","endLine":27,"endColumn":15},{"ruleId":"618","severity":1,"message":"651","line":30,"column":8,"nodeType":"620","messageId":"621","endLine":30,"endColumn":21},{"ruleId":"618","severity":1,"message":"652","line":35,"column":8,"nodeType":"620","messageId":"621","endLine":35,"endColumn":18},{"ruleId":"618","severity":1,"message":"653","line":36,"column":8,"nodeType":"620","messageId":"621","endLine":36,"endColumn":20},{"ruleId":"618","severity":1,"message":"654","line":70,"column":10,"nodeType":"620","messageId":"621","endLine":70,"endColumn":21},{"ruleId":"618","severity":1,"message":"631","line":3,"column":18,"nodeType":"620","messageId":"621","endLine":3,"endColumn":28},{"ruleId":"618","severity":1,"message":"675","line":6,"column":3,"nodeType":"620","messageId":"621","endLine":6,"endColumn":9},{"ruleId":"618","severity":1,"message":"676","line":7,"column":3,"nodeType":"620","messageId":"621","endLine":7,"endColumn":17},{"ruleId":"618","severity":1,"message":"677","line":8,"column":3,"nodeType":"620","messageId":"621","endLine":8,"endColumn":15},{"ruleId":"618","severity":1,"message":"678","line":12,"column":8,"nodeType":"620","messageId":"621","endLine":12,"endColumn":16},{"ruleId":"618","severity":1,"message":"635","line":20,"column":3,"nodeType":"620","messageId":"621","endLine":20,"endColumn":13},{"ruleId":"618","severity":1,"message":"679","line":22,"column":3,"nodeType":"620","messageId":"621","endLine":22,"endColumn":13},{"ruleId":"618","severity":1,"message":"636","line":23,"column":3,"nodeType":"620","messageId":"621","endLine":23,"endColumn":7},{"ruleId":"618","severity":1,"message":"680","line":49,"column":9,"nodeType":"620","messageId":"621","endLine":49,"endColumn":17},{"ruleId":"618","severity":1,"message":"681","line":51,"column":19,"nodeType":"620","messageId":"621","endLine":51,"endColumn":29},{"ruleId":"618","severity":1,"message":"648","line":52,"column":20,"nodeType":"620","messageId":"621","endLine":52,"endColumn":25},{"ruleId":"618","severity":1,"message":"645","line":16,"column":29,"nodeType":"620","messageId":"621","endLine":16,"endColumn":42},{"ruleId":"618","severity":1,"message":"619","line":20,"column":10,"nodeType":"620","messageId":"621","endLine":20,"endColumn":26},{"ruleId":"618","severity":1,"message":"646","line":21,"column":10,"nodeType":"620","messageId":"621","endLine":21,"endColumn":18},{"ruleId":"618","severity":1,"message":"647","line":37,"column":17,"nodeType":"620","messageId":"621","endLine":37,"endColumn":24},{"ruleId":"618","severity":1,"message":"648","line":37,"column":26,"nodeType":"620","messageId":"621","endLine":37,"endColumn":31},{"ruleId":"618","severity":1,"message":"655","line":7,"column":10,"nodeType":"620","messageId":"621","endLine":7,"endColumn":20},{"ruleId":"618","severity":1,"message":"656","line":25,"column":8,"nodeType":"620","messageId":"621","endLine":25,"endColumn":19},{"ruleId":"618","severity":1,"message":"657","line":52,"column":9,"nodeType":"620","messageId":"621","endLine":52,"endColumn":15},{"ruleId":"618","severity":1,"message":"631","line":2,"column":18,"nodeType":"620","messageId":"621","endLine":2,"endColumn":28},{"ruleId":"618","severity":1,"message":"636","line":14,"column":3,"nodeType":"620","messageId":"621","endLine":14,"endColumn":7},{"ruleId":"618","severity":1,"message":"640","line":32,"column":9,"nodeType":"620","messageId":"621","endLine":32,"endColumn":16},{"ruleId":"618","severity":1,"message":"660","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"618","severity":1,"message":"659","line":57,"column":23,"nodeType":"620","messageId":"621","endLine":57,"endColumn":30},{"ruleId":"618","severity":1,"message":"623","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":25},{"ruleId":"618","severity":1,"message":"662","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":29},{"ruleId":"618","severity":1,"message":"661","line":5,"column":22,"nodeType":"620","messageId":"621","endLine":5,"endColumn":26},{"ruleId":"618","severity":1,"message":"663","line":23,"column":3,"nodeType":"620","messageId":"621","endLine":23,"endColumn":8},{"ruleId":"618","severity":1,"message":"664","line":24,"column":3,"nodeType":"620","messageId":"621","endLine":24,"endColumn":12},{"ruleId":"618","severity":1,"message":"660","line":1,"column":17,"nodeType":"620","messageId":"621","endLine":1,"endColumn":26},{"ruleId":"618","severity":1,"message":"667","line":2,"column":10,"nodeType":"620","messageId":"621","endLine":2,"endColumn":19},{"ruleId":"618","severity":1,"message":"668","line":103,"column":5,"nodeType":"620","messageId":"621","endLine":103,"endColumn":14},{"ruleId":"618","severity":1,"message":"669","line":111,"column":5,"nodeType":"620","messageId":"621","endLine":111,"endColumn":16},{"ruleId":"618","severity":1,"message":"670","line":112,"column":5,"nodeType":"620","messageId":"621","endLine":112,"endColumn":13},{"ruleId":"671","severity":1,"message":"672","line":263,"column":13,"nodeType":"673","endLine":263,"endColumn":50},{"ruleId":"618","severity":1,"message":"674","line":6,"column":10,"nodeType":"620","messageId":"621","endLine":6,"endColumn":19},"no-native-reassign",["682"],"no-negated-in-lhs",["683"],"@typescript-eslint/no-unused-vars","'selectUsersState' is defined but never used.","Identifier","unusedVar","'string' is defined but never used.","'useState' is defined but never used.","'usersSlice' is defined but never used.","'useSelector' is defined but never used.","'BugDetailsPage' is defined but never used.","'selectBugsState' is defined but never used.","'UserState' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'RouterLink' is defined but never used.","'login' is defined but never used.","'BugIcon' is defined but never used.","'CredentialsPayload' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'FavoriteIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'history' is assigned a value but never used.","'pathname' is assigned a value but never used.","'RepeatOneSharp' is defined but never used.","'SettingsPayload' is defined but never used.","'BugForm' is defined but never used.","'useMediaQuery' is defined but never used.","'BugState' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Redirect' is defined but never used.","'AddIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'FormDialog' is defined but never used.","'DemoCredsBox' is defined but never used.","'isConnected' is assigned a value but never used.","'BugPayload' is defined but never used.","'SubjectIcon' is defined but never used.","'userId' is assigned a value but never used.","'demoCreds' is defined but never used.","'control' is assigned a value but never used.","'useEffect' is defined but never used.","'User' is defined but never used.","'PeopleAltOutlinedIcon' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.",["682"],["683"],"'useParams' is defined but never used.","'createdAt' is assigned a value but never used.","'assignments' is assigned a value but never used.","'filePath' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RootState' is defined but never used.","'signup' is defined but never used.","'clearAuthError' is defined but never used.","'setAuthError' is defined but never used.","'ErrorBox' is defined but never used.","'IconButton' is defined but never used.","'dispatch' is assigned a value but never used.","'setIsHuman' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]